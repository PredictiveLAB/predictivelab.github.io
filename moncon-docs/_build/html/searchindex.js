Search.setIndex({"docnames": ["index", "modules", "moncon", "moncon.ml", "moncon.ml.supervised", "moncon.ml.unsupervised", "moncon.pipelines", "moncon.preprocessing", "moncon.preprocessing.nan", "moncon.preprocessing.parameter_extraction", "moncon.tools", "setup"], "filenames": ["index.rst", "modules.rst", "moncon.rst", "moncon.ml.rst", "moncon.ml.supervised.rst", "moncon.ml.unsupervised.rst", "moncon.pipelines.rst", "moncon.preprocessing.rst", "moncon.preprocessing.nan.rst", "moncon.preprocessing.parameter_extraction.rst", "moncon.tools.rst", "setup.rst"], "titles": ["Welcome to PredictiveLab\u2019s documentation!", "predictivelab", "moncon package", "moncon.ml package", "moncon.ml.supervised package", "moncon.ml.unsupervised package", "moncon.pipelines package", "moncon.preprocessing package", "moncon.preprocessing.nan package", "moncon.preprocessing.parameter_extraction package", "moncon.tools package", "setup module"], "terms": {"index": [0, 8], "modul": [0, 1], "search": [0, 3], "page": [0, 8], "moncon": 1, "packag": 1, "subpackag": 1, "ml": [1, 2], "submodul": 1, "base_arch": [1, 2, 5], "keras_wrapp": [1, 2], "content": 1, "pipelin": [1, 2], "rawdata_process": [1, 2], "train_test_func": [1, 2], "preprocess": [1, 2, 3, 6, 10], "base_preprocess": [1, 2], "filter": [1, 2, 4, 5], "method": [1, 2, 3, 4, 5, 8, 9], "parameter_reduct": [1, 2], "scale": [1, 2, 3, 5, 8], "tool": [1, 2, 8], "arch_op": [1, 2], "evaluation_op": [1, 2], "preprocessing_op": [1, 2], "training_op": [1, 2], "error": [1, 3, 5, 8], "analyze_except": [1, 2], "analyze_not_impl": [1, 2], "fit_excetpt": [1, 2], "fit_not_impl": [1, 2], "fit_transform_excetpt": [1, 2], "fit_transform_not_impl": [1, 2], "init_arch_except": [1, 2], "init_arch_not_impl": [1, 2], "init_preprocess_except": [1, 2], "init_preprocess_not_impl": [1, 2], "invalid_input": [1, 2], "predict_except": [1, 2], "predict_not_impl": [1, 2], "transform_except": [1, 2], "transform_not_impl": [1, 2], "wrong_arch": [1, 2], "wrong_preprocess": [1, 2], "plot": [1, 8], "get_dataplot_dict": [1, 2], "plot_data": [1, 2], "plt_kpi_sensor": [1, 2], "setup": 1, "supervis": [2, 3], "mlp": [2, 3, 5], "model": [2, 3, 5, 8, 10], "unsupervis": [2, 3], "anomaly_detect": [2, 3], "autoencod": [2, 3], "autoencodermodel": [2, 3, 5], "fit": [2, 3, 4, 5, 7, 8, 9], "mean_squared_error": [2, 3], "parse_fit_log": [2, 3, 4, 5], "parse_predict_log": [2, 3, 4, 5], "predict": [2, 3, 4], "predict_kpi": [2, 3], "baseanomalymodel": [2, 3], "kpi_dist_0": [2, 3], "basearch": [2, 3, 4], "aggreg": [2, 3, 4, 10], "apply_cols_mask": [2, 3, 7], "clean_dataset": [2, 3], "init_arch": [2, 3, 4, 5], "init_preprocess": [2, 3, 10], "parse_dataset": [2, 3], "preprocess_from_csv": [2, 3], "preprocess_from_dataset": [2, 3], "split_window": [2, 3], "dlsupervisedmodel": [2, 3, 4], "sklearnanomalymodel": [2, 3, 5], "load_model": [2, 3], "plot_valid": [2, 3], "save_model": [2, 3], "sklearnsupervisedmodel": [2, 3, 4], "random_search_opt": [2, 3], "cnnblock": [2, 3], "call": [2, 3, 7, 8], "kerasnet": [2, 3], "keras_compile_opt": [2, 3], "keras_layer_map": [2, 3], "sequential_model_cr": [2, 3], "reversecnnblock": [2, 3], "clean_data": [2, 6], "drop_empty_col": [2, 6], "file_nam": [2, 6], "get_tag": [2, 6], "save_data": [2, 6], "set_sensor_nam": [2, 6], "make_save_path": [2, 6], "make_sensors_comb_cod": [2, 6], "train_test_pipelin": [2, 6], "nan": [2, 7], "drop_nan": [2, 7], "fill_nan": [2, 7], "smooth_tool": [2, 7], "parameter_extract": [2, 7], "combined_extract": [2, 7], "fourier_transform": [2, 7], "temporary_domain": [2, 7], "basepreprocess": [2, 7, 8, 9], "analyz": [2, 7, 8, 9, 10], "columns_to_drop": [2, 7], "fit_transform": [2, 7, 8, 9, 10], "merge_x_transform": [2, 7], "merge_y_transform": [2, 7], "output_proces": [2, 7, 9], "set_n_compon": [2, 7], "transform": [2, 3, 5, 7, 8, 9], "transform_xi": [2, 7], "deleteinterpol": [2, 7], "deletetransi": [2, 7], "outlierremov": [2, 7], "correl": [2, 7, 8], "heatmap": [2, 7], "movingaverag": [2, 7], "stopfiltermov": [2, 7], "autokernelpca": [2, 7], "autopca": [2, 7], "minmaxsc": [2, 7], "standardsc": [2, 7], "arch_class": [2, 10], "init_arch_class": [2, 10], "evaluate_report_from_csv": [2, 10], "get_end_messag": [2, 10], "get_end_message_thread": [2, 10], "get_eval_id": [2, 10], "get_log_filepath": [2, 10], "get_start_messag": [2, 10], "get_start_message_thread": [2, 10], "initialize_online_report_evalu": [2, 10], "parse_logging_fil": [2, 10], "analyze_tsreport": [2, 10], "get_prerprocess_path": [2, 10], "test_transform": [2, 10], "valid_transform": [2, 10], "get_checkpoint_filepath": [2, 10], "get_exp_id": [2, 10], "train_model": [2, 10], "class": [2, 3, 4, 5, 7, 8, 9], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10], "base": [2, 3, 4, 5, 7, 8, 9], "object": [2, 3, 6], "except": [2, 3, 8], "anayz": 2, "implement": [2, 5, 8], "arch": 2, "initi": [2, 3, 4, 5, 8], "invalid": 2, "input": [2, 3, 4, 5, 8, 9], "wrong": [2, 8], "architectur": [2, 3, 4, 5], "name": [2, 3, 8], "data_kpi": 2, "data": [2, 3, 4, 5, 7, 8, 9], "sensors_list": 2, "n_col": 2, "2": [2, 4, 5, 8], "titl": [2, 8], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10], "suptit_sz": 2, "12": [2, 8], "ylabel_sz": 2, "9": [2, 8], "5": [2, 5, 8], "fail_data": 2, "time_col": 2, "timestamp": [2, 3, 4, 6], "fail_label_col": 2, "label": [2, 3, 4, 6, 8], "start_fail_col": 2, "start": [2, 8], "end_fail_col": 2, "end": [2, 8], "fail_label": 2, "1": [2, 3, 4, 5, 8], "densiti": [2, 8], "100": [2, 8], "n_cols_legend": 2, "22": 2, "xlabel_sz": 2, "15": [2, 8], "cnn": [3, 4, 5], "gradientboostingcl": [3, 4], "model_scor": [3, 4, 5], "rnn": [3, 4, 5], "randomforestcl": [3, 4], "ellipticenvelopeanomalymodel": [3, 5], "isolationforestanomalymodel": [3, 5], "localoutlierfactoranomalymodel": [3, 5], "oneclasssvmanomalymodel": [3, 5], "autocnn": [3, 5, 6], "automlp": [3, 5], "autornn": [3, 5], "defin": [3, 4, 5, 8, 9], "all": [3, 4, 7, 8], "sklearn": [3, 4, 5], "deep": 3, "learn": [3, 4, 8], "anomali": [3, 5], "novelti": [3, 5], "detect": [3, 5, 7], "arch_param": [3, 4, 5, 10], "chckpt_filepath": [3, 4, 5, 7, 8, 9, 10], "inherit": [3, 4, 5], "from": [3, 4, 5, 7, 8], "thi": [3, 8], "ar": [3, 4, 5, 6, 7, 8, 9], "common": [3, 8], "dl": 3, "which": [3, 7, 8, 9], "static": [3, 4, 7, 9], "introduc": [3, 4, 5], "follow": [3, 4, 5, 8], "necessari": [3, 4, 5], "valu": [3, 4, 5, 7, 8], "contamin": [3, 5], "float": [3, 4, 5, 7, 8], "proport": [3, 5, 8], "outlier": [3, 5, 7], "set": [3, 5, 8], "train_param": [3, 4, 5], "epoch": [3, 4, 5, 6], "int": [3, 4, 5, 7, 8], "number": [3, 4, 5, 7, 8], "train": [3, 4, 5, 7], "batch_siz": [3, 4, 5, 6], "batch": [3, 4, 5], "size": [3, 4, 5, 8], "instanc": [3, 8], "attribut": 3, "fill": [3, 8], "child": 3, "self": [3, 8], "use_split_window": 3, "bool": [3, 5, 7, 8], "whether": [3, 5, 8], "us": [3, 4, 5, 6, 7, 8, 9], "split": [3, 4], "window": [3, 4, 5, 8], "an": [3, 4, 5, 7, 8], "arrai": [3, 8], "matric": [3, 5], "befor": [3, 7, 8], "enter": 3, "windows_s": 3, "onli": [3, 4, 5, 6, 7, 8], "i": [3, 4, 5, 6, 7, 8, 9], "true": [3, 7, 8, 10], "overlap": [3, 4, 5, 9], "when": [3, 8], "x_train": [3, 4], "datafram": [3, 6, 7, 8], "y_train": [3, 4], "seri": [3, 4, 6, 8], "x_valid": [3, 4], "y_valid": [3, 4], "dict": [3, 4, 6, 8], "str": [3, 4, 5, 6, 7, 8], "ani": [3, 4, 8], "out_chckpt_filepath": [3, 4, 7, 8, 9], "log_filepath": [3, 4, 5, 10], "metric": [3, 4, 5], "option": [3, 5, 8], "list": [3, 4, 8], "intern": [3, 4, 8], "given": [3, 6, 8], "same": [3, 8, 9], "output": [3, 4, 5, 8], "save": [3, 4, 6], "checkpoint": [3, 4], "file": [3, 4], "must": [3, 8], "contain": [3, 8], "arg": [3, 4, 6, 7], "pd": [3, 4, 6, 7], "ignor": [3, 8], "dictionari": [3, 4, 8], "paramet": [3, 4, 6, 9], "path": [3, 4, 6], "where": [3, 4, 5, 6, 7, 8], "log": [3, 4, 8], "progress": [3, 4], "note": 3, "right": [3, 8], "now": [3, 8], "x": [3, 4, 5, 7, 8, 9, 10], "y": [3, 7, 8, 9, 10], "axi": [3, 8, 9], "0": [3, 4, 5, 8, 9], "tupl": [3, 4, 8], "ndarrai": [3, 4, 8], "reconstruct": [3, 5], "calcul": [3, 5, 7, 8, 9], "between": [3, 4, 5, 8], "origin": [3, 8], "return": [3, 4, 7], "kpi": [3, 5], "deprec": [3, 8], "np": [3, 4, 8], "x_hat": 3, "similar": [3, 8], "probabl": [3, 8], "sampl": [3, 4, 6, 8], "being": [3, 8], "determin": [3, 8], "sigmoid": [3, 5], "function": [3, 8], "after": [3, 7, 8], "linear": [3, 5], "decision_funct": 3, "distanc": [3, 8], "exp": [3, 8], "dist": 3, "b": [3, 8], "current": 3, "more": [3, 8], "can": [3, 8], "constant": [3, 7], "lineal": 3, "output_kpi": 3, "set_save_min_max_train_dist": 3, "scale_dist": 3, "save_scale_param": 3, "load_scale_param": 3, "slope_coef": [3, 5], "slope": [3, 5, 6, 7], "factor": [3, 5], "how": [3, 5, 8], "quickli": [3, 5], "grow": [3, 5], "maximum": [3, 4, 8], "consid": [3, 7, 8], "normal": [3, 7, 8], "max_train_dist": 3, "": [3, 4, 5, 8], "min_train_dist": 3, "minimum": [3, 4, 7], "abc": [3, 7], "basic": [3, 8], "mainli": 3, "compos": 3, "load": [3, 4, 8], "select": [3, 8], "mean": [3, 7, 8], "max": [3, 8], "min": [3, 8], "sum": [3, 8], "support": [3, 5, 8], "If": [3, 6, 7, 8], "differ": [3, 7, 8, 9], "dataset": [3, 7, 10], "cols_mask": [3, 7, 10], "clean": [3, 7], "standard": [3, 8], "column": [3, 7, 9], "remov": [3, 7], "accord": 3, "also": [3, 6, 7], "separ": [3, 7, 8, 9], "rest": 3, "them": [3, 8], "found": [3, 8], "kei": [3, 8], "each": [3, 4, 5, 7, 8, 9], "should": [3, 8], "drop": [3, 8], "kept": 3, "default": [3, 5, 8], "abstract": [3, 4, 7], "valid": [3, 4, 8], "creat": [3, 4, 8], "new": [3, 4, 6, 8], "one": [3, 4, 7, 8], "specifi": [3, 4, 8], "preprocess_method": 3, "pars": 3, "target": 3, "numpi": [3, 8], "result": [3, 4, 8], "while": [3, 4, 8], "dataset_csv_path": [3, 10], "phase": 3, "split_period": [3, 10], "csv": 3, "param": 3, "either": [3, 6, 8], "test": [3, 7, 8], "extract": [3, 9], "assum": [3, 5, 8], "togeth": [3, 7, 8], "window_s": 3, "timeseri": 3, "time": [3, 4, 5, 7, 8], "n_featur": 3, "take": [3, 8], "n_window": 3, "perfectli": 3, "divis": 3, "amount": 3, "begin": [3, 8], "includ": [3, 5, 6, 8], "arch_nam": [3, 10], "get": [3, 8], "score": 3, "xgboostcl": 3, "data_csv_path": 3, "random_search_param": 3, "accuraci": 3, "search_param": 3, "random": [3, 4, 8], "perform": [3, 8], "searchcv": 3, "As": [3, 8], "cv": 3, "mai": [3, 8], "make": [3, 7, 8], "sens": [3, 7], "grid_search_param": 3, "grid_param": 3, "util": 3, "architechtur": 3, "kera": 3, "layer": [3, 4, 5], "kwarg": 3, "logic": 3, "live": 3, "The": [3, 4, 5, 8], "state": [3, 8], "its": [3, 8, 9], "first": [3, 4, 5, 8], "invoc": 3, "wrap": [3, 8], "creation": 3, "variabl": [3, 8], "other": [3, 8], "resourc": [3, 8], "tf": 3, "init_scop": 3, "It": [3, 7, 8], "recommend": [3, 8], "__init__": 3, "build": 3, "automat": [3, 8], "execut": 3, "tensor": 3, "posit": [3, 8], "argument": [3, 6, 8], "subject": 3, "special": [3, 8], "rule": [3, 8], "explicitli": 3, "pass": [3, 8], "A": [3, 8], "cannot": 3, "have": [3, 7, 8], "zero": [3, 8], "provid": [3, 8], "via": 3, "keyword": [3, 8], "python": [3, 8], "scalar": [3, 8], "cast": [3, 8], "mask": 3, "metadata": 3, "collect": 3, "built": 3, "input_shap": 3, "shape": [3, 8], "info": 3, "input_spec": 3, "compat": [3, 8], "check": [3, 6, 8], "against": [3, 8], "mix": 3, "precis": [3, 8], "appli": [3, 8], "ha": [3, 8], "behavior": [3, 7, 8], "handl": 3, "manual": [3, 8], "savedmodel": 3, "specif": [3, 6, 7, 8], "gener": [3, 8], "integr": [3, 9], "variou": 3, "ecosystem": 3, "like": [3, 7, 8], "tfmot": 3, "tflite": 3, "j": [3, 8], "etc": [3, 8], "addit": [3, 8], "although": [3, 8], "reason": [3, 8], "abov": [3, 8], "reserv": 3, "boolean": [3, 8], "indic": [3, 5, 8], "meant": 3, "infer": [3, 8], "previou": [3, 8], "did": 3, "come": [3, 8], "correspond": [3, 8], "e": [3, 7, 8], "came": 3, "layers_list": 3, "compile_kwarg": 3, "x_val": 3, "y_val": 3, "optim": [3, 8], "loss": 3, "loss_weight": 3, "weighted_metr": 3, "activ": 3, "core": 3, "avg_pool": 3, "pool": 3, "average_pooling2d": 3, "averagepooling2d": 3, "batch_norm": 3, "batchnorm": 3, "conv": 3, "convolut": [3, 5], "conv2d": 3, "conv_block": 3, "conv_transpos": 3, "conv2d_transpos": 3, "conv2dtranspos": 3, "dens": [3, 5], "dropout": 3, "regular": [3, 4], "flatten": 3, "reshap": [3, 8], "global_avg_pool": 3, "global_average_pooling2d": 3, "globalaveragepooling2d": 3, "gru": 3, "input_lay": 3, "engin": [3, 8], "inputlay": 3, "lstm": [3, 4], "max_pool": 3, "max_pooling2d": 3, "maxpooling2d": 3, "repeat_vector": 3, "repeatvector": 3, "rev_conv_block": 3, "simple_rnn": 3, "simplernn": 3, "classifi": 4, "randomforestclassifi": 4, "gradientboostingclassifi": 4, "classif": [4, 7, 8], "redefin": [4, 5], "requir": [4, 5, 8], "time_s": [4, 5], "step": [4, 5], "feature_s": [4, 5], "featur": [4, 5, 7, 9], "filter_num": [4, 5], "block": [4, 5], "doubl": [4, 5, 8], "kernel_v": [4, 5], "vertic": [4, 5], "kernel": [4, 5], "kernel_h": [4, 5], "horizont": [4, 5], "out_siz": 4, "xgboost": 4, "n_estim": [4, 5], "tree": [4, 5], "forest": [4, 5], "rang": [4, 5, 7, 8], "inf": [4, 5, 8], "max_depth": 4, "depth": 4, "eta": 4, "rate": [4, 8], "lambda": [4, 8], "l2": 4, "term": [4, 8], "h_num": [4, 5], "hidden": [4, 5], "h_size": 4, "unit": [4, 5, 8], "min_samples_split": 4, "node": 4, "ellipticenvelop": 5, "assume_cent": 5, "center": [5, 8], "support_fract": 5, "point": [5, 8], "ellipsoid": 5, "ellipt": 5, "envelop": 5, "isol": 5, "algorithm": [5, 8], "local": 5, "n_neighbor": 5, "neighbor": 5, "k": [5, 8], "nearest": 5, "queri": 5, "auto": 5, "ball_tre": 5, "kd_tree": 5, "brute": 5, "p": [5, 8], "power": [5, 8], "minkowski": 5, "recomend": 5, "One": 5, "svm": 5, "gamma": [5, 7, 8], "coeffici": [5, 8], "rbf": 5, "poli": 5, "nu": 5, "degre": [5, 8], "3": [5, 7, 8], "neural": 5, "network": 5, "encod": 5, "decod": 5, "anomal": 5, "matrix": [5, 8], "feed": 5, "block_num": 5, "multilay": 5, "perceptron": 5, "vector": [5, 8], "instant": 5, "lat_siz": 5, "latent": 5, "recurr": 5, "tags_seri": 6, "timecol": 6, "data_sourc": 6, "asset_id": 6, "clean_data_fold": 6, "freq": 6, "frequenc": [6, 8], "duplic": 6, "old": 6, "exist": [6, 8], "move": [6, 7], "raw": 6, "excel": 6, "anoth": [6, 7], "folder": 6, "models_save_fold": 6, "model_nam": 6, "scaler_nam": 6, "train_sensors_list": 6, "v": [6, 8], "associ": [6, 8], "ej": 6, "model_param": 6, "otherwis": [6, 8], "x_data": 6, "x_timestamp": 6, "cols_to_us": 6, "mode": [6, 8], "numer": [6, 8], "without": [6, 8], "dropnan": [7, 8], "fillnan": [7, 8], "initialguess": [7, 8], "robustweight": [7, 8], "beta": [7, 8], "binomi": [7, 8], "chisquar": [7, 8], "choic": [7, 8], "dctnd": [7, 8], "df2matrix": [7, 8], "dirichlet": [7, 8], "exponenti": [7, 8], "f": [7, 8], "gcv": [7, 8], "geometr": [7, 8], "get_stat": [7, 8], "gumbel": [7, 8], "hypergeometr": [7, 8], "laplac": [7, 8], "logist": [7, 8], "lognorm": [7, 8], "logseri": [7, 8], "multinomi": [7, 8], "multivariate_norm": [7, 8], "negative_binomi": [7, 8], "noncentral_chisquar": [7, 8], "noncentral_f": [7, 8], "pareto": [7, 8], "peak": [7, 8], "permut": [7, 8], "poisson": [7, 8], "rand": [7, 8], "randint": [7, 8], "randn": [7, 8], "random_integ": [7, 8], "random_sampl": [7, 8], "rayleigh": [7, 8], "seed": [7, 8], "set_stat": [7, 8], "shuffl": [7, 8], "smooth_df": [7, 8], "smoothn": [7, 8], "standard_cauchi": [7, 8], "standard_exponenti": [7, 8], "standard_gamma": [7, 8], "standard_norm": [7, 8], "standard_t": [7, 8], "triangular": [7, 8], "uniform": [7, 8], "vonmis": [7, 8], "wald": [7, 8], "warn": [7, 8], "weibul": [7, 8], "zipf": [7, 8], "combinedextract": [7, 9], "bandfouri": [7, 9], "fourierband": [7, 9], "hilbertenvelop": [7, 9], "simplefouri": [7, 9], "temporarydomain": [7, 9], "get_box_plot_data": [7, 9], "time_featur": [7, 9], "y_label": [7, 8, 9, 10], "transform_masked_x": 7, "transform_x": 7, "preprocess_param": [7, 8, 9, 10], "out": [7, 8], "interpol": 7, "signal": [7, 8], "second": [7, 8], "deriv": [7, 8], "null": [7, 8], "almost": 7, "find": 7, "everi": 7, "equip": [7, 10], "shut": 7, "down": 7, "delet": 7, "inform": [7, 8], "sensor": 7, "filter_col": 7, "lower": [7, 8], "than": [7, 8], "min_valu": 7, "n_valu": 7, "machin": 7, "turn": 7, "elimin": 7, "shutdown": 7, "transient": 7, "drop_filter_col": 7, "healthi": 7, "iqr": 7, "q25": 7, "limit": [7, 8], "q75": 7, "upper": [7, 8], "suppos": [7, 8], "wheren": 7, "t": [7, 8], "case": [7, 8], "could": [7, 8], "therefor": [7, 8], "doesn": 7, "averag": [7, 8], "substract": 7, "n_ventana": 7, "those": [7, 8], "section": 7, "oper": 7, "final": [7, 8], "dato": 7, "n_averag": 7, "n_transient": 7, "some": 8, "insight": 8, "about": 8, "wed": 8, "jan": 8, "26": 8, "00": 8, "49": 8, "2022": 8, "author": 8, "leonel": 8, "quintero": 8, "r": 8, "h": 8, "wstr": 8, "draw": 8, "distribut": 8, "relat": 8, "frac": 8, "alpha": 8, "int_0": 8, "dt": 8, "often": 8, "seen": 8, "bayesian": 8, "order": 8, "statist": 8, "code": 8, "default_rng": 8, "instead": 8, "pleas": 8, "quick": 8, "array_lik": 8, "g": 8, "m": 8, "n": 8, "drawn": 8, "singl": 8, "both": [8, 9], "broadcast": 8, "parameter": 8, "trial": 8, "success": 8, "integ": 8, "interv": 8, "truncat": 8, "accept": 8, "thei": [8, 9], "equal": 8, "over": 8, "scipi": 8, "stat": 8, "binom": 8, "cumul": 8, "estim": 8, "popul": 8, "work": 8, "well": 8, "unless": 8, "product": 8, "For": 8, "peopl": 8, "show": 8, "4": 8, "who": 8, "left": 8, "hand": 8, "11": 8, "Then": 8, "27": 8, "so": 8, "dalgaard": 8, "peter": 8, "introductori": 8, "springer": 8, "verlag": 8, "2002": 8, "glantz": 8, "stanton": 8, "primer": 8, "biostatist": 8, "mcgraw": 8, "hill": 8, "fifth": 8, "edit": 8, "lentner": 8, "marvin": 8, "elementari": 8, "bogden": 8, "quiglei": 8, "1972": 8, "weisstein": 8, "eric": 8, "w": 8, "mathworld": 8, "wolfram": 8, "web": 8, "http": 8, "com": 8, "binomialdistribut": 8, "html": 8, "wikipedia": 8, "en": 8, "org": 8, "wiki": 8, "binomial_distribut": 8, "10": 8, "1000": 8, "flip": 8, "coin": 8, "real": 8, "world": 8, "compani": 8, "drill": 8, "wild": 8, "cat": 8, "oil": 8, "explor": 8, "nine": 8, "fail": 8, "what": 8, "happen": 8, "let": 8, "do": 8, "20": 8, "000": 8, "count": 8, "20000": 8, "answer": 8, "38885": 8, "38": 8, "df": 8, "chi": 8, "squar": 8, "independ": 8, "varianc": 8, "hypothesi": 8, "freedom": 8, "valueerror": 8, "inappropri": 8, "obtain": 8, "q": 8, "sum_": 8, "mathtt": 8, "2_i": 8, "denot": 8, "sim": 8, "2_k": 8, "infti": 8, "nist": 8, "handbook": 8, "www": 8, "itl": 8, "gov": 8, "div898": 8, "eda": 8, "section3": 8, "eda3666": 8, "htm": 8, "89920014": 8, "00867716": 8, "13710533": 8, "62318272": 8, "replac": 8, "d": 8, "version": 8, "7": 8, "element": 8, "were": 8, "arang": 8, "multipl": 8, "entri": 8, "item": 8, "less": 8, "dimension": 8, "length": 8, "fals": 8, "greater": 8, "user": 8, "through": 8, "effici": 8, "sampler": 8, "produc": 8, "even": 8, "len": 8, "row": 8, "possibl": 8, "equival": 8, "non": 8, "6": 8, "repeat": 8, "arbitrari": 8, "just": 8, "aa_milne_arr": 8, "pooh": 8, "rabbit": 8, "piglet": 8, "christoph": 8, "dtype": 8, "u11": 8, "dct": 8, "dimens": 8, "multivari": 8, "conjug": 8, "prior": 8, "sequenc": 8, "fulfil": 8, "condit": 8, "x_i": 8, "propto": 8, "prod_": 8, "alpha_i": 8, "_i": 8, "concentr": 8, "properti": 8, "comput": 8, "compon": 8, "y_i": 8, "david": 8, "mckai": 8, "theori": 8, "chapter": 8, "23": 8, "uk": 8, "mackai": 8, "itila": 8, "dirichlet_distribut": 8, "cite": 8, "want": 8, "cut": 8, "string": 8, "piec": 8, "had": 8, "design": 8, "allow": 8, "variat": 8, "rel": 8, "transpos": 8, "import": 8, "matplotlib": 8, "pyplot": 8, "plt": 8, "barh": 8, "color": 8, "Its": 8, "elsewher": 8, "invers": 8, "altern": 8, "wide": 8, "_": 8, "continu": 8, "analogu": 8, "describ": 8, "mani": 8, "situat": 8, "raindrop": 8, "measur": 8, "rainstorm": 8, "request": 8, "neg": 8, "peyton": 8, "z": 8, "peebl": 8, "jr": 8, "principl": 8, "4th": 8, "ed": 8, "2001": 8, "57": 8, "process": [8, 9], "poisson_process": 8, "exponential_distribut": 8, "dfnum": 8, "dfden": 8, "denomin": 8, "known": 8, "fisher": 8, "aris": 8, "anova": 8, "ratio": 8, "two": [8, 9], "compar": 8, "group": 8, "depend": 8, "respect": 8, "problem": 8, "minu": 8, "within": 8, "pp": 8, "47": 8, "40": 8, "children": 8, "diabet": 8, "25": 8, "control": 8, "fast": 8, "blood": 8, "glucos": 8, "wa": 8, "86": 8, "82": 8, "deviat": 8, "09": 8, "consist": 8, "parent": 8, "statu": 8, "doe": 8, "affect": 8, "level": 8, "give": 8, "36": 8, "01": 8, "48": 8, "bound": 8, "top": 8, "sort": 8, "61988120985": 8, "chanc": 8, "exce": 8, "62": 8, "reject": 8, "sometim": 8, "theta": 8, "failur": 8, "electron": 8, "natur": 8, "wait": 8, "event": 8, "relev": 8, "gammadistribut": 8, "gamma_distribut": 8, "std": 8, "sqrt": 8, "displai": 8, "histogram": 8, "along": 8, "sp": 8, "bin": 8, "hist": 8, "50": 8, "linewidth": 8, "aow": 8, "dcty": 8, "isfinit": 8, "wtot": 8, "nof": 8, "noe": 8, "smoothord": 8, "bernoulli": 8, "experi": 8, "outcom": 8, "run": 8, "achiev": 8, "mass": 8, "individu": 8, "ten": 8, "thousand": 8, "35": 8, "10000": 8, "succeed": 8, "34889999999999999": 8, "repres": 8, "detail": 8, "legaci": 8, "flag": 8, "bitgener": 8, "mt19937": 8, "624": 8, "uint": 8, "unsign": 8, "po": 8, "has_gauss": 8, "cached_gaussian": 8, "need": 8, "alter": 8, "know": 8, "exactli": 8, "he": 8, "she": 8, "loc": 8, "locat": 8, "below": 8, "gumbel_l": 8, "gumbel_r": 8, "genextrem": 8, "smallest": 8, "extrem": 8, "sev": 8, "type": 8, "gev": 8, "tail": 8, "mu": 8, "german": 8, "mathematician": 8, "emil": 8, "juliu": 8, "veri": 8, "earli": 8, "hydrologi": 8, "literatur": 8, "occurr": 8, "flood": 8, "wind": 8, "speed": 8, "rainfal": 8, "fat": 8, "larger": 8, "gaussian": 8, "henc": 8, "surprisingli": 8, "frequent": 8, "year": 8, "underestim": 8, "frechet": 8, "57721": 8, "pi": 8, "york": 8, "columbia": 8, "univers": 8, "press": 8, "1958": 8, "reiss": 8, "thoma": 8, "analysi": 8, "insur": 8, "financ": 8, "field": 8, "basel": 8, "birkhaus": 8, "30": 8, "maxima": 8, "append": 8, "ngood": 8, "nbad": 8, "nsampl": 8, "wai": 8, "good": 8, "bad": 8, "nonneg": 8, "least": 8, "most": 8, "randomli": 8, "subset": 8, "taken": 8, "hypergeom": 8, "le": 8, "urn": 8, "black": 8, "white": 8, "marbl": 8, "you": 8, "ball": 8, "wherea": 8, "space": 8, "infinit": 8, "becom": 8, "larg": 8, "approach": 8, "hypergeometricdistribut": 8, "hypergeometric_distribut": 8, "nsamp": 8, "unlik": 8, "grab": 8, "pull": 8, "100000": 8, "003": 8, "pretti": 8, "decai": 8, "sharper": 8, "fatter": 8, "ident": 8, "law": 8, "1774": 8, "express": 8, "absolut": 8, "magnitud": 8, "lead": 8, "econom": 8, "health": 8, "scienc": 8, "seem": 8, "better": 8, "abramowitz": 8, "stegun": 8, "mathemat": 8, "formula": 8, "graph": 8, "tabl": 8, "9th": 8, "print": 8, "dover": 8, "kotz": 8, "samuel": 8, "et": 8, "al": 8, "laplacedistribut": 8, "laplace_distribut": 8, "8": 8, "pdf": 8, "ab": 8, "comparison": 8, "median": 8, "act": 8, "mixtur": 8, "epidemiologi": 8, "chess": 8, "feder": 8, "fide": 8, "elo": 8, "rank": 8, "system": 8, "player": 8, "132": 8, "133": 8, "logisticdistribut": 8, "logistic_distribut": 8, "def": 8, "lgst_val": 8, "sigma": 8, "itself": 8, "underli": 8, "ln": 8, "logarithm": 8, "limpert": 8, "stahel": 8, "abbt": 8, "across": 8, "clue": 8, "bioscienc": 8, "vol": 8, "51": 8, "No": 8, "ethz": 8, "ch": 8, "31": 8, "32": 8, "align": 8, "mid": 8, "linspac": 8, "tight": 8, "demonstr": 8, "logser": 8, "speci": 8, "rich": 8, "propos": 8, "corbet": 8, "william": 8, "1943": 8, "occup": 8, "car": 8, "buza": 8, "martin": 8, "culver": 8, "stephen": 8, "understand": 8, "region": 8, "divers": 8, "biodivers": 8, "research": 8, "volum": 8, "septemb": 8, "1999": 8, "187": 8, "195": 8, "c": 8, "anim": 8, "journal": 8, "ecologi": 8, "42": 8, "58": 8, "dali": 8, "lunn": 8, "ostrowski": 8, "small": 8, "crc": 8, "1994": 8, "logarithmic_distribut": 8, "pval": 8, "throw": 8, "dice": 8, "x_0": 8, "x_1": 8, "x_p": 8, "These": 8, "howev": 8, "last": 8, "alwai": 8, "account": 8, "remain": 8, "long": 8, "In": 8, "word": 8, "land": 8, "onc": 8, "again": 8, "we": 8, "threw": 8, "die": 8, "16": 8, "14": 8, "17": 8, "up": 8, "leftov": 8, "reli": 8, "bias": 8, "twice": 8, "much": 8, "weight": 8, "side": 8, "traceback": 8, "recent": 8, "cov": 8, "check_valid": 8, "tol": 8, "1e": 8, "multinorm": 8, "higher": 8, "Such": 8, "covari": 8, "analog": 8, "width": 8, "symmetr": 8, "semidefinit": 8, "proper": 8, "pack": 8, "arrang": 8, "becaus": 8, "toler": 8, "singular": 8, "coordin": 8, "bell": 8, "curv": 8, "univari": 8, "vari": 8, "x_2": 8, "x_n": 8, "c_": 8, "ij": 8, "x_j": 8, "ii": 8, "spread": 8, "full": 8, "popular": 8, "approxim": 8, "spheric": 8, "diagon": 8, "orient": 8, "5000": 8, "definit": 8, "undefin": 8, "backward": 8, "guarante": 8, "papouli": 8, "stochast": 8, "3rd": 8, "1991": 8, "duda": 8, "o": 8, "hart": 8, "stork": 8, "pattern": 8, "2nd": 8, "wilei": 8, "here": 8, "800": 8, "bivari": 8, "expect": 8, "65465": 8, "pt": 8, "close": 8, "0326911": 8, "01280782": 8, "96202397": 8, "85602287": 8, "47613949": 8, "corrcoef": 8, "6273591314603949": 8, "visual": 8, "scatter": 8, "cloud": 8, "illustr": 8, "grid": 8, "occur": 8, "total": 8, "reach": 8, "form": 8, "pmf": 8, "repeatedli": 8, "until": 8, "third": 8, "appear": 8, "negativebinomialdistribut": 8, "negative_binomial_distribut": 8, "nonc": 8, "noncentr": 8, "chang": 8, "earlier": 8, "central": 8, "p_": 8, "y_": 8, "2i": 8, "noncentral_chi": 8, "squared_distribut": 8, "200": 8, "figur": 8, "0000001": 8, "values2": 8, "ob": 8, "noncentralf": 8, "studi": 8, "area": 8, "ll": 8, "deg": 8, "nc_val": 8, "1000000": 8, "nf": 8, "c_val": 8, "de": 8, "moivr": 8, "later": 8, "gauss": 8, "characterist": 8, "commonli": 8, "influenc": 8, "tini": 8, "disturb": 8, "own": 8, "uniqu": 8, "centr": 8, "norm": 8, "increas": 8, "607": 8, "impli": 8, "ly": 8, "rather": 8, "far": 8, "awai": 8, "normal_distribut": 8, "theorem": 8, "125": 8, "verifi": 8, "ddof": 8, "four": 8, "49401501": 8, "00950034": 8, "81814867": 8, "29718677": 8, "39924804": 8, "68456316": 8, "99394529": 8, "84057254": 8, "lomax": 8, "shift": 8, "classic": 8, "ad": 8, "multipli": 8, "simplifi": 8, "avail": 8, "unbound": 8, "80": 8, "percent": 8, "lowest": 8, "genpareto": 8, "am": 8, "italian": 8, "economist": 8, "vilfredo": 8, "outsid": 8, "bradford": 8, "develop": 8, "wealth": 8, "economi": 8, "access": 8, "download": 8, "project": 8, "sourceforg": 8, "franci": 8, "hunt": 8, "paul": 8, "johnson": 8, "On": 8, "1896": 8, "cours": 8, "polit": 8, "lausann": 8, "pareto_distribut": 8, "mimic": 8, "matlab": 8, "fn": 8, "multi": 8, "copi": 8, "arr": 8, "lam": 8, "fix": 8, "observ": 8, "int64": 8, "represent": 8, "poissondistribut": 8, "poisson_distribut": 8, "500": 8, "d0": 8, "d1": 8, "dn": 8, "conveni": 8, "port": 8, "That": 8, "ones": 8, "14022471": 8, "96360618": 8, "37601032": 8, "25528411": 8, "49313049": 8, "94909878": 8, "low": 8, "high": 8, "inclus": 8, "exclus": 8, "discret": 8, "half": 8, "open": 8, "sign": 8, "highest": 8, "largest": 8, "desir": 8, "byteord": 8, "nativ": 8, "appropri": 8, "omit": 8, "uint8": 8, "int_lik": 8, "suppli": 8, "1923875335537315": 8, "int_": 8, "translat": 8, "platform": 8, "been": 8, "sinc": 8, "To": 8, "evenli": 8, "choos": 8, "five": 8, "625": 8, "roll": 8, "six": 8, "d2": 8, "dsum": 8, "unif": 8, "add": 8, "47108547995356098": 8, "30220482": 8, "86820401": 8, "1654503": 8, "11659149": 8, "54323428": 8, "three": 8, "99149989": 8, "52338984": 8, "99091858": 8, "79479508": 8, "23204345": 8, "75224494": 8, "cdotp": 8, "would": 8, "east": 8, "north": 8, "veloc": 8, "brighton": 8, "ltd": 8, "archiv": 8, "20090514091424": 8, "co": 8, "asp": 8, "rayleigh_distribut": 8, "wave": 8, "height": 8, "tend": 8, "meter": 8, "fraction": 8, "meanvalu": 8, "modevalu": 8, "percentag": 8, "087300000000000003": 8, "rese": 8, "best": 8, "practic": 8, "recreat": 8, "randomst": 8, "seedsequ": 8, "123456789": 8, "restart": 8, "stream": 8, "987654321": 8, "re": 8, "bit": 8, "By": 8, "mersenn": 8, "twister": 8, "pseudo": 8, "directli": 8, "miss": 8, "cach": 8, "matsumoto": 8, "nishimura": 8, "623": 8, "equidistribut": 8, "pseudorandom": 8, "acm": 8, "tran": 8, "simul": 8, "1998": 8, "modifi": 8, "place": 8, "sub": 8, "mutablesequ": 8, "mutabl": 8, "ns0": 8, "sd": 8, "verbos": 8, "s0": 8, "z0": 8, "isrobust": 8, "maxit": 8, "tolz": 8, "001": 8, "weightstr": 8, "bisquar": 8, "exitflag": 8, "varargin": 8, "spline": 8, "uniformli": 8, "noisi": 8, "imag": 8, "3d": 8, "finit": 8, "treat": 8, "smoother": 8, "empti": 8, "cross": 8, "nil": 8, "carri": 8, "minim": 8, "outli": 8, "fine": 8, "tune": 8, "subsequ": 8, "iter": 8, "presenc": 8, "option_nam": 8, "option_valu": 8, "termin": 8, "criteria": 8, "syntax": 8, "exit": 8, "converg": 8, "cauchi": 8, "lorentz": 8, "bigl": 8, "bigr": 8, "solut": 8, "driven": 8, "harmon": 8, "oscil": 8, "spectral": 8, "line": 8, "broaden": 8, "tilt": 8, "angl": 8, "sensit": 8, "heavi": 8, "look": 8, "heavier": 8, "sematech": 8, "eda3663": 8, "cauchydistribut": 8, "cauchy_distribut": 8, "3x8000": 8, "8000": 8, "stdev": 8, "6888893": 8, "78096262": 8, "89086505": 8, "49876311": 8, "38672696": 8, "4685006": 8, "student": 8, "hyperbol": 8, "resembl": 8, "assumpt": 8, "publish": 8, "1908": 8, "gosset": 8, "guin": 8, "breweri": 8, "dublin": 8, "due": 8, "proprietari": 8, "issu": 8, "under": 8, "pseudonym": 8, "With": 8, "s_t": 8, "83": 8, "daili": 8, "energi": 8, "intak": 8, "women": 8, "kilojoul": 8, "kj": 8, "5260": 8, "5470": 8, "5640": 8, "6180": 8, "6390": 8, "6515": 8, "6805": 8, "7515": 8, "8230": 8, "8770": 8, "systemat": 8, "7725": 8, "our": 8, "absenc": 8, "effect": 8, "signific": 8, "95": 8, "empir": 8, "unbias": 8, "concav": 8, "root": 8, "6753": 8, "636363636364": 8, "1142": 8, "1232221373727": 8, "8207540608310198": 8, "adequ": 8, "critic": 8, "018318": 8, "05": 8, "pre": 8, "threshold": 8, "condition": 8, "too": 8, "l": 8, "text": 8, "leq": 8, "ill": 8, "knowledg": 8, "triangular_distribut": 8, "exclud": 8, "boundari": 8, "round": 8, "equat": 8, "yield": 8, "alia": 8, "anywher": 8, "offici": 8, "eventu": 8, "behav": 8, "satisfi": 8, "inequ": 8, "float32": 8, "99999999": 8, "ones_lik": 8, "kappa": 8, "von": 8, "mise": 8, "dispers": 8, "circular": 8, "circl": 8, "thought": 8, "i_0": 8, "bessel": 8, "richard": 8, "edler": 8, "born": 8, "austria": 8, "hungari": 8, "ukrain": 8, "fled": 8, "1939": 8, "becam": 8, "professor": 8, "harvard": 8, "aerodynam": 8, "fluid": 8, "mechan": 8, "philosophi": 8, "academ": 8, "1964": 8, "i0": 8, "num": 8, "infin": 8, "claim": 8, "relationship": 8, "brownian": 8, "motion": 8, "1956": 8, "tweedi": 8, "cover": 8, "2x": 8, "attempt": 8, "competitor": 8, "reliabl": 8, "stock": 8, "interest": 8, "20090423014010": 8, "chhikara": 8, "raj": 8, "folk": 8, "leroi": 8, "methodologi": 8, "applic": 8, "1988": 8, "inverse_gaussian_distribut": 8, "s1": 8, "s2": 8, "u": 8, "weibull_max": 8, "weibull_min": 8, "iii": 8, "asymptot": 8, "rosin": 8, "rammler": 8, "reduc": 8, "waloddi": 8, "royal": 8, "technic": 8, "stockholm": 8, "Of": 8, "strength": 8, "materi": 8, "ingeniorsvetenskapsakademien": 8, "handlingar": 8, "nr": 8, "151": 8, "generalstaben": 8, "litografiska": 8, "anstalt": 8, "forlag": 8, "asm": 8, "paper": 8, "1951": 8, "weibull_distribut": 8, "weib": 8, "zeta": 8, "geq": 8, "riemann": 8, "american": 8, "linguist": 8, "georg": 8, "kingslei": 8, "languag": 8, "cambridg": 8, "ma": 8, "univ": 8, "1932": 8, "bincount": 8, "bar": 8, "semilogi": 8, "legend": 8, "combin": 9, "segment": 9, "divid": 9, "temporary_sensors_mask": 9, "merg": 9, "fourier": 9, "band": 9, "bp": 9, "cols_count": 9, "derivatit": 9, "eval_id": 10, "report_csv_path": 10, "logs_root": 10, "eval_freq": 10, "trained_model": 10, "online_report_produc": 10, "online_report_consumm": 10, "report": 10, "preprocess_nam": 10, "cls_result": 10, "datareport": 10, "prep_idx": 10, "model_chckpt_filepath": 10, "txt_log": 10, "idx": 10, "log_fil": 10, "chckpts_root": 10, "exp_id": 10, "basemodel_chkpt_filepath": 10}, "objects": {"": [[2, 0, 0, "-", "moncon"]], "moncon": [[2, 0, 0, "-", "errors"], [3, 0, 0, "-", "ml"], [6, 0, 0, "-", "pipelines"], [2, 0, 0, "-", "plots"], [7, 0, 0, "-", "preprocessing"], [10, 0, 0, "-", "tools"]], "moncon.errors": [[2, 1, 1, "", "Errors"]], "moncon.errors.Errors": [[2, 2, 1, "", "ANALYZE_EXCEPTION"], [2, 2, 1, "", "ANALYZE_NOT_IMPLEMENTED"], [2, 2, 1, "", "FIT_EXCETPTION"], [2, 2, 1, "", "FIT_NOT_IMPLEMENTED"], [2, 2, 1, "", "FIT_TRANSFORM_EXCETPTION"], [2, 2, 1, "", "FIT_TRANSFORM_NOT_IMPLEMENTED"], [2, 2, 1, "", "INIT_ARCH_EXCEPTION"], [2, 2, 1, "", "INIT_ARCH_NOT_IMPLEMENTED"], [2, 2, 1, "", "INIT_PREPROCESS_EXCEPTION"], [2, 2, 1, "", "INIT_PREPROCESS_NOT_IMPLEMENTED"], [2, 2, 1, "", "INVALID_INPUT"], [2, 2, 1, "", "PREDICT_EXCEPTION"], [2, 2, 1, "", "PREDICT_NOT_IMPLEMENTED"], [2, 2, 1, "", "TRANSFORM_EXCEPTION"], [2, 2, 1, "", "TRANSFORM_NOT_IMPLEMENTED"], [2, 2, 1, "", "WRONG_ARCH"], [2, 2, 1, "", "WRONG_PREPROCESS"]], "moncon.ml": [[3, 0, 0, "-", "base_arch"], [3, 0, 0, "-", "keras_wrapper"], [4, 0, 0, "-", "supervised"], [5, 0, 0, "-", "unsupervised"]], "moncon.ml.base_arch": [[3, 1, 1, "", "AutoEncoderModel"], [3, 1, 1, "", "BaseAnomalyModel"], [3, 1, 1, "", "BaseArch"], [3, 1, 1, "", "DLSupervisedModel"], [3, 1, 1, "", "SklearnAnomalyModel"], [3, 1, 1, "", "SklearnSupervisedModel"]], "moncon.ml.base_arch.AutoEncoderModel": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "mean_squared_error"], [3, 3, 1, "", "parse_fit_logging"], [3, 3, 1, "", "parse_predict_logging"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "predict_kpi"]], "moncon.ml.base_arch.BaseAnomalyModel": [[3, 2, 1, "", "KPI_DIST_0"]], "moncon.ml.base_arch.BaseArch": [[3, 3, 1, "", "aggregate"], [3, 3, 1, "", "apply_cols_mask"], [3, 3, 1, "", "clean_dataset"], [3, 3, 1, "", "fit"], [3, 3, 1, "", "init_arch"], [3, 3, 1, "", "init_preprocess"], [3, 3, 1, "", "parse_dataset"], [3, 3, 1, "", "parse_fit_logging"], [3, 3, 1, "", "parse_predict_logging"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "preprocess_from_csv"], [3, 3, 1, "", "preprocess_from_dataset"], [3, 3, 1, "", "split_windows"]], "moncon.ml.base_arch.DLSupervisedModel": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "parse_fit_logging"], [3, 3, 1, "", "parse_predict_logging"], [3, 3, 1, "", "predict"]], "moncon.ml.base_arch.SklearnAnomalyModel": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "load_model"], [3, 3, 1, "", "parse_fit_logging"], [3, 3, 1, "", "parse_predict_logging"], [3, 3, 1, "", "plot_validation"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "predict_kpi"], [3, 3, 1, "", "save_model"]], "moncon.ml.base_arch.SklearnSupervisedModel": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "load_model"], [3, 3, 1, "", "parse_fit_logging"], [3, 3, 1, "", "parse_predict_logging"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "random_search_opt"], [3, 3, 1, "", "save_model"]], "moncon.ml.keras_wrapper": [[3, 1, 1, "", "CnnBlock"], [3, 1, 1, "", "KerasNet"], [3, 1, 1, "", "ReverseCnnBlock"]], "moncon.ml.keras_wrapper.CnnBlock": [[3, 3, 1, "", "call"]], "moncon.ml.keras_wrapper.KerasNet": [[3, 3, 1, "", "fit"], [3, 2, 1, "", "keras_compile_options"], [3, 2, 1, "", "keras_layer_map"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "sequential_model_creator"]], "moncon.ml.keras_wrapper.ReverseCnnBlock": [[3, 3, 1, "", "call"]], "moncon.ml.supervised": [[4, 0, 0, "-", "mlp"], [4, 0, 0, "-", "models"]], "moncon.ml.supervised.mlp": [[4, 1, 1, "", "MLP"]], "moncon.ml.supervised.mlp.MLP": [[4, 3, 1, "", "fit"], [4, 3, 1, "", "init_arch"], [4, 3, 1, "", "parse_fit_logging"], [4, 3, 1, "", "parse_predict_logging"], [4, 3, 1, "", "predict"]], "moncon.ml.supervised.models": [[4, 1, 1, "", "CNN"], [4, 1, 1, "", "GradientBoostingCls"], [4, 1, 1, "", "MLP"], [4, 1, 1, "", "RNN"], [4, 1, 1, "", "RandomForestCls"]], "moncon.ml.supervised.models.CNN": [[4, 3, 1, "", "init_arch"], [4, 3, 1, "", "parse_fit_logging"]], "moncon.ml.supervised.models.GradientBoostingCls": [[4, 3, 1, "", "init_arch"], [4, 3, 1, "", "model_score"], [4, 3, 1, "", "parse_fit_logging"]], "moncon.ml.supervised.models.MLP": [[4, 3, 1, "", "init_arch"], [4, 3, 1, "", "parse_fit_logging"]], "moncon.ml.supervised.models.RNN": [[4, 3, 1, "", "init_arch"], [4, 3, 1, "", "parse_fit_logging"]], "moncon.ml.supervised.models.RandomForestCls": [[4, 3, 1, "", "init_arch"], [4, 3, 1, "", "model_score"], [4, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised": [[5, 0, 0, "-", "anomaly_detection"], [5, 0, 0, "-", "autoencoder"]], "moncon.ml.unsupervised.anomaly_detection": [[5, 1, 1, "", "EllipticEnvelopeAnomalyModel"], [5, 1, 1, "", "IsolationForestAnomalyModel"], [5, 1, 1, "", "LocalOutlierFactorAnomalyModel"], [5, 1, 1, "", "OneClassSVMAnomalyModel"]], "moncon.ml.unsupervised.anomaly_detection.EllipticEnvelopeAnomalyModel": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.anomaly_detection.IsolationForestAnomalyModel": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "model_score"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.anomaly_detection.LocalOutlierFactorAnomalyModel": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "model_score"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.anomaly_detection.OneClassSVMAnomalyModel": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "model_score"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.autoencoder": [[5, 1, 1, "", "AutoCNN"], [5, 1, 1, "", "AutoMLP"], [5, 1, 1, "", "AutoRNN"]], "moncon.ml.unsupervised.autoencoder.AutoCNN": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.autoencoder.AutoMLP": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.ml.unsupervised.autoencoder.AutoRNN": [[5, 3, 1, "", "init_arch"], [5, 3, 1, "", "parse_fit_logging"]], "moncon.pipelines": [[6, 0, 0, "-", "rawdata_process"], [6, 0, 0, "-", "train_test_funcs"]], "moncon.pipelines.rawdata_process": [[6, 4, 1, "", "clean_data"], [6, 4, 1, "", "drop_empty_cols"], [6, 4, 1, "", "file_name"], [6, 4, 1, "", "get_tags"], [6, 4, 1, "", "save_data"], [6, 4, 1, "", "set_sensor_names"]], "moncon.pipelines.train_test_funcs": [[6, 4, 1, "", "make_save_path"], [6, 4, 1, "", "make_sensors_comb_code"], [6, 4, 1, "", "train_test_pipeline"]], "moncon.plots": [[2, 4, 1, "", "get_dataplot_dict"], [2, 4, 1, "", "plot_data"], [2, 4, 1, "", "plt_kpi_sensors"]], "moncon.preprocessing": [[7, 0, 0, "-", "base_preprocess"], [7, 0, 0, "-", "filters"], [7, 0, 0, "-", "methods"], [8, 0, 0, "-", "nan"], [9, 0, 0, "-", "parameter_extraction"], [7, 0, 0, "-", "parameter_reduction"], [7, 0, 0, "-", "scaling"]], "moncon.preprocessing.base_preprocess": [[7, 1, 1, "", "BasePreprocess"]], "moncon.preprocessing.base_preprocess.BasePreprocess": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "apply_cols_mask"], [7, 3, 1, "", "columns_to_drop"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "merge_X_transform"], [7, 3, 1, "", "merge_y_transform"], [7, 3, 1, "", "output_procesable"], [7, 3, 1, "", "set_n_components"], [7, 3, 1, "", "transform"], [7, 3, 1, "", "transform_xy"]], "moncon.preprocessing.filters": [[7, 1, 1, "", "DeleteInterpolated"], [7, 1, 1, "", "DeleteTransient"], [7, 1, 1, "", "OutlierRemoval"]], "moncon.preprocessing.filters.DeleteInterpolated": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.filters.DeleteTransient": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.filters.OutlierRemoval": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.methods": [[7, 1, 1, "", "Correlation"], [7, 1, 1, "", "HeatMap"], [7, 1, 1, "", "MovingAverage"], [7, 1, 1, "", "StopFilterMov"]], "moncon.preprocessing.methods.Correlation": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.methods.HeatMap": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.methods.MovingAverage": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.methods.StopFilterMov": [[7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.nan": [[8, 0, 0, "-", "drop_nan"], [8, 0, 0, "-", "fill_nan"], [8, 0, 0, "-", "smooth_tools"]], "moncon.preprocessing.nan.drop_nan": [[8, 1, 1, "", "DropNan"]], "moncon.preprocessing.nan.drop_nan.DropNan": [[8, 3, 1, "", "analyze"], [8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "transform"]], "moncon.preprocessing.nan.fill_nan": [[8, 1, 1, "", "FillNan"]], "moncon.preprocessing.nan.fill_nan.FillNan": [[8, 3, 1, "", "analyze"], [8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "transform"]], "moncon.preprocessing.nan.smooth_tools": [[8, 4, 1, "", "InitialGuess"], [8, 4, 1, "", "RobustWeights"], [8, 4, 1, "", "beta"], [8, 4, 1, "", "binomial"], [8, 4, 1, "", "chisquare"], [8, 4, 1, "", "choice"], [8, 4, 1, "", "dctND"], [8, 4, 1, "", "df2matrix"], [8, 4, 1, "", "dirichlet"], [8, 4, 1, "", "exponential"], [8, 4, 1, "", "f"], [8, 4, 1, "", "gamma"], [8, 4, 1, "", "gcv"], [8, 4, 1, "", "geometric"], [8, 4, 1, "", "get_state"], [8, 4, 1, "", "gumbel"], [8, 4, 1, "", "hypergeometric"], [8, 4, 1, "", "laplace"], [8, 4, 1, "", "logistic"], [8, 4, 1, "", "lognormal"], [8, 4, 1, "", "logseries"], [8, 4, 1, "", "multinomial"], [8, 4, 1, "", "multivariate_normal"], [8, 4, 1, "", "negative_binomial"], [8, 4, 1, "", "noncentral_chisquare"], [8, 4, 1, "", "noncentral_f"], [8, 4, 1, "", "normal"], [8, 4, 1, "", "pareto"], [8, 4, 1, "", "peaks"], [8, 4, 1, "", "permutation"], [8, 4, 1, "", "poisson"], [8, 4, 1, "", "rand"], [8, 4, 1, "", "randint"], [8, 4, 1, "", "randn"], [8, 4, 1, "", "random_integers"], [8, 4, 1, "", "random_sample"], [8, 4, 1, "", "rayleigh"], [8, 4, 1, "", "seed"], [8, 4, 1, "", "set_state"], [8, 4, 1, "", "shuffle"], [8, 4, 1, "", "smooth_df"], [8, 4, 1, "", "smoothn"], [8, 4, 1, "", "standard_cauchy"], [8, 4, 1, "", "standard_exponential"], [8, 4, 1, "", "standard_gamma"], [8, 4, 1, "", "standard_normal"], [8, 4, 1, "", "standard_t"], [8, 4, 1, "", "triangular"], [8, 4, 1, "", "uniform"], [8, 4, 1, "", "vonmises"], [8, 4, 1, "", "wald"], [8, 4, 1, "", "warning"], [8, 4, 1, "", "weibull"], [8, 4, 1, "", "zipf"]], "moncon.preprocessing.parameter_extraction": [[9, 0, 0, "-", "combined_extraction"], [9, 0, 0, "-", "fourier_transform"], [9, 0, 0, "-", "temporary_domain"]], "moncon.preprocessing.parameter_extraction.combined_extraction": [[9, 1, 1, "", "CombinedExtraction"]], "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_extraction.fourier_transform": [[9, 1, 1, "", "BandFourier"], [9, 1, 1, "", "Fourierbands"], [9, 1, 1, "", "HilbertEnvelope"], [9, 1, 1, "", "SimpleFourier"]], "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_extraction.temporary_domain": [[9, 1, 1, "", "TemporaryDomain"]], "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain": [[9, 3, 1, "", "analyze"], [9, 3, 1, "", "features"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "get_box_plot_data"], [9, 3, 1, "", "output_procesable"], [9, 3, 1, "", "time_features"], [9, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_reduction": [[7, 1, 1, "", "AutoKernelPCA"], [7, 1, 1, "", "AutoPCA"]], "moncon.preprocessing.parameter_reduction.AutoKernelPCA": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "output_procesable"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.parameter_reduction.AutoPCA": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "output_procesable"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.scaling": [[7, 1, 1, "", "MinMaxScaling"], [7, 1, 1, "", "StandardScaling"]], "moncon.preprocessing.scaling.MinMaxScaling": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.preprocessing.scaling.StandardScaling": [[7, 3, 1, "", "analyze"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "fit_transform"], [7, 3, 1, "", "transform"]], "moncon.tools": [[10, 0, 0, "-", "arch_ops"], [10, 0, 0, "-", "evaluation_ops"], [10, 0, 0, "-", "preprocessing_ops"], [10, 0, 0, "-", "training_ops"]], "moncon.tools.arch_ops": [[10, 4, 1, "", "arch_class"], [10, 4, 1, "", "init_arch_class"]], "moncon.tools.evaluation_ops": [[10, 4, 1, "", "evaluate_report_from_csv"], [10, 4, 1, "", "get_end_message"], [10, 4, 1, "", "get_end_message_thread"], [10, 4, 1, "", "get_eval_id"], [10, 4, 1, "", "get_log_filepath"], [10, 4, 1, "", "get_start_message"], [10, 4, 1, "", "get_start_message_thread"], [10, 4, 1, "", "initialize_online_report_evaluation"], [10, 4, 1, "", "parse_logging_file"]], "moncon.tools.preprocessing_ops": [[10, 4, 1, "", "analyze"], [10, 4, 1, "", "analyze_tsreport"], [10, 4, 1, "", "fit_transform"], [10, 4, 1, "", "get_prerprocess_path"], [10, 4, 1, "", "init_preprocess"], [10, 4, 1, "", "test_transform"], [10, 4, 1, "", "valid_transform"]], "moncon.tools.training_ops": [[10, 4, 1, "", "get_checkpoint_filepath"], [10, 4, 1, "", "get_end_message"], [10, 4, 1, "", "get_exp_id"], [10, 4, 1, "", "get_log_filepath"], [10, 4, 1, "", "get_start_message"], [10, 4, 1, "", "parse_logging_file"], [10, 4, 1, "", "train_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "predictivelab": [0, 1], "": [0, 6], "document": 0, "indic": 0, "tabl": 0, "moncon": [2, 3, 4, 5, 6, 7, 8, 9, 10], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10], "subpackag": [2, 3, 7], "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10], "error": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "plot": 2, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10], "ml": [3, 4, 5], "base_arch": 3, "keras_wrapp": 3, "supervis": 4, "mlp": 4, "model": [4, 6], "unsupervis": 5, "anomaly_detect": 5, "autoencod": 5, "pipelin": 6, "rawdata_process": 6, "clean": 6, "empti": 6, "row": 6, "column": 6, "chang": 6, "data": 6, "name": 6, "tag": 6, "drop": 6, "all": 6, "have": 6, "greater": 6, "than": 6, "99": 6, "nan": [6, 8], "raw_data": 6, "return": [6, 8], "list": 6, "file": 6, "train_test_func": 6, "train": 6, "test": 6, "scaler": 6, "preprocess": [7, 8, 9], "base_preprocess": 7, "filter": 7, "method": 7, "parameter_reduct": 7, "scale": 7, "drop_nan": 8, "fill_nan": 8, "smooth_tool": 8, "paramet": 8, "see": 8, "also": 8, "note": 8, "refer": 8, "exampl": 8, "rais": 8, "robust": 8, "smooth": 8, "parameter_extract": 9, "combined_extract": 9, "fourier_transform": 9, "temporary_domain": 9, "tool": 10, "arch_op": 10, "evaluation_op": 10, "preprocessing_op": 10, "training_op": 10, "setup": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to PredictiveLab\u2019s documentation!": [[0, "welcome-to-predictivelab-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "predictivelab": [[1, "predictivelab"]], "moncon package": [[2, "moncon-package"]], "Subpackages": [[2, "subpackages"], [3, "subpackages"], [7, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "moncon.errors module": [[2, "module-moncon.errors"]], "moncon.plots module": [[2, "module-moncon.plots"]], "Module contents": [[2, "module-moncon"], [3, "module-moncon.ml"], [4, "module-moncon.ml.supervised"], [5, "module-moncon.ml.unsupervised"], [6, "module-moncon.pipelines"], [7, "module-moncon.preprocessing"], [8, "module-moncon.preprocessing.nan"], [9, "module-moncon.preprocessing.parameter_extraction"], [10, "module-moncon.tools"]], "moncon.ml package": [[3, "moncon-ml-package"]], "moncon.ml.base_arch module": [[3, "module-moncon.ml.base_arch"]], "moncon.ml.keras_wrapper module": [[3, "module-moncon.ml.keras_wrapper"]], "moncon.ml.supervised package": [[4, "moncon-ml-supervised-package"]], "moncon.ml.supervised.mlp module": [[4, "module-moncon.ml.supervised.mlp"]], "moncon.ml.supervised.models module": [[4, "module-moncon.ml.supervised.models"]], "moncon.ml.unsupervised package": [[5, "moncon-ml-unsupervised-package"]], "moncon.ml.unsupervised.anomaly_detection module": [[5, "module-moncon.ml.unsupervised.anomaly_detection"]], "moncon.ml.unsupervised.autoencoder module": [[5, "module-moncon.ml.unsupervised.autoencoder"]], "moncon.pipelines package": [[6, "moncon-pipelines-package"]], "moncon.pipelines.rawdata_process module": [[6, "module-moncon.pipelines.rawdata_process"]], "Cleans empty rows and columns, and change data\u2019s column names as TAGs": [[6, "cleans-empty-rows-and-columns-and-change-data-s-column-names-as-tags"]], "Drop all columns that have greater than 99% of NaNs.": [[6, "drop-all-columns-that-have-greater-than-99-of-nans"]], "raw_data:": [[6, "raw-data"]], "Returns as list the file\u2019s TAGs": [[6, "returns-as-list-the-file-s-tags"]], "moncon.pipelines.train_test_funcs module": [[6, "module-moncon.pipelines.train_test_funcs"]], "Pipeline to train or test a scaler and model.": [[6, "pipeline-to-train-or-test-a-scaler-and-model"]], "moncon.preprocessing package": [[7, "moncon-preprocessing-package"]], "moncon.preprocessing.base_preprocess module": [[7, "module-moncon.preprocessing.base_preprocess"]], "moncon.preprocessing.filters module": [[7, "module-moncon.preprocessing.filters"]], "moncon.preprocessing.methods module": [[7, "module-moncon.preprocessing.methods"]], "moncon.preprocessing.parameter_reduction module": [[7, "module-moncon.preprocessing.parameter_reduction"]], "moncon.preprocessing.scaling module": [[7, "module-moncon.preprocessing.scaling"]], "moncon.preprocessing.nan package": [[8, "moncon-preprocessing-nan-package"]], "moncon.preprocessing.nan.drop_nan module": [[8, "module-moncon.preprocessing.nan.drop_nan"]], "moncon.preprocessing.nan.fill_nan module": [[8, "module-moncon.preprocessing.nan.fill_nan"]], "moncon.preprocessing.nan.smooth_tools module": [[8, "module-moncon.preprocessing.nan.smooth_tools"]], "Parameters": [[8, "parameters"], [8, "id1"], [8, "id9"], [8, "id16"], [8, "id22"], [8, "id34"], [8, "id41"], [8, "id49"], [8, "id57"], [8, "id61"], [8, "id65"], [8, "id73"], [8, "id82"], [8, "id92"], [8, "id101"], [8, "id109"], [8, "id119"], [8, "id123"], [8, "id131"], [8, "id139"], [8, "id146"], [8, "id156"], [8, "id165"], [8, "id176"], [8, "id180"], [8, "id188"], [8, "id192"], [8, "id196"], [8, "id201"], [8, "id206"], [8, "id210"], [8, "id220"], [8, "id226"], [8, "id230"], [8, "id239"], [8, "id243"], [8, "id251"], [8, "id256"], [8, "id265"], [8, "id272"], [8, "id277"], [8, "id285"], [8, "id294"], [8, "id303"]], "Returns": [[8, "returns"], [8, "id2"], [8, "id10"], [8, "id17"], [8, "id23"], [8, "id35"], [8, "id42"], [8, "id50"], [8, "id58"], [8, "id62"], [8, "id66"], [8, "id74"], [8, "id83"], [8, "id93"], [8, "id102"], [8, "id110"], [8, "id120"], [8, "id124"], [8, "id132"], [8, "id140"], [8, "id147"], [8, "id157"], [8, "id166"], [8, "id177"], [8, "id181"], [8, "id189"], [8, "id193"], [8, "id197"], [8, "id202"], [8, "id207"], [8, "id211"], [8, "id221"], [8, "id227"], [8, "id231"], [8, "id240"], [8, "id244"], [8, "id252"], [8, "id257"], [8, "id266"], [8, "id273"], [8, "id278"], [8, "id286"], [8, "id295"], [8, "id304"]], "See Also": [[8, "see-also"], [8, "id3"], [8, "id11"], [8, "id19"], [8, "id25"], [8, "id36"], [8, "id43"], [8, "id51"], [8, "id59"], [8, "id63"], [8, "id67"], [8, "id75"], [8, "id84"], [8, "id94"], [8, "id103"], [8, "id111"], [8, "id121"], [8, "id125"], [8, "id133"], [8, "id141"], [8, "id148"], [8, "id158"], [8, "id167"], [8, "id178"], [8, "id182"], [8, "id190"], [8, "id194"], [8, "id198"], [8, "id203"], [8, "id208"], [8, "id212"], [8, "id222"], [8, "id228"], [8, "id232"], [8, "id241"], [8, "id245"], [8, "id253"], [8, "id258"], [8, "id267"], [8, "id274"], [8, "id279"], [8, "id287"], [8, "id296"], [8, "id305"]], "Notes": [[8, "notes"], [8, "id12"], [8, "id20"], [8, "id26"], [8, "id44"], [8, "id52"], [8, "id64"], [8, "id68"], [8, "id76"], [8, "id85"], [8, "id95"], [8, "id104"], [8, "id112"], [8, "id126"], [8, "id134"], [8, "id142"], [8, "id149"], [8, "id159"], [8, "id168"], [8, "id183"], [8, "id199"], [8, "id204"], [8, "id213"], [8, "id218"], [8, "id223"], [8, "id233"], [8, "id246"], [8, "id254"], [8, "id259"], [8, "id268"], [8, "id275"], [8, "id280"], [8, "id288"], [8, "id297"], [8, "id306"]], "References": [[8, "references"], [8, "id13"], [8, "id27"], [8, "id37"], [8, "id45"], [8, "id53"], [8, "id69"], [8, "id77"], [8, "id86"], [8, "id96"], [8, "id105"], [8, "id113"], [8, "id127"], [8, "id135"], [8, "id143"], [8, "id150"], [8, "id161"], [8, "id170"], [8, "id184"], [8, "id214"], [8, "id224"], [8, "id234"], [8, "id247"], [8, "id260"], [8, "id269"], [8, "id281"], [8, "id289"], [8, "id298"], [8, "id307"]], "Examples": [[8, "examples"], [8, "id15"], [8, "id21"], [8, "id30"], [8, "id48"], [8, "id56"], [8, "id60"], [8, "id72"], [8, "id81"], [8, "id91"], [8, "id100"], [8, "id108"], [8, "id118"], [8, "id122"], [8, "id130"], [8, "id138"], [8, "id145"], [8, "id153"], [8, "id164"], [8, "id175"], [8, "id179"], [8, "id187"], [8, "id191"], [8, "id195"], [8, "id200"], [8, "id205"], [8, "id209"], [8, "id217"], [8, "id229"], [8, "id238"], [8, "id242"], [8, "id250"], [8, "id255"], [8, "id263"], [8, "id271"], [8, "id276"], [8, "id284"], [8, "id293"], [8, "id302"], [8, "id309"]], "Raises": [[8, "raises"], [8, "id18"], [8, "id24"]], "Robust smoothing": [[8, "robust-smoothing"]], "moncon.preprocessing.parameter_extraction package": [[9, "moncon-preprocessing-parameter-extraction-package"]], "moncon.preprocessing.parameter_extraction.combined_extraction module": [[9, "module-moncon.preprocessing.parameter_extraction.combined_extraction"]], "moncon.preprocessing.parameter_extraction.fourier_transform module": [[9, "module-moncon.preprocessing.parameter_extraction.fourier_transform"]], "moncon.preprocessing.parameter_extraction.temporary_domain module": [[9, "module-moncon.preprocessing.parameter_extraction.temporary_domain"]], "moncon.tools package": [[10, "moncon-tools-package"]], "moncon.tools.arch_ops module": [[10, "module-moncon.tools.arch_ops"]], "moncon.tools.evaluation_ops module": [[10, "module-moncon.tools.evaluation_ops"]], "moncon.tools.preprocessing_ops module": [[10, "module-moncon.tools.preprocessing_ops"]], "moncon.tools.training_ops module": [[10, "module-moncon.tools.training_ops"]], "setup module": [[11, "setup-module"]]}, "indexentries": {"analyze_exception (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.ANALYZE_EXCEPTION"]], "analyze_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.ANALYZE_NOT_IMPLEMENTED"]], "errors (class in moncon.errors)": [[2, "moncon.errors.Errors"]], "fit_excetption (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.FIT_EXCETPTION"]], "fit_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.FIT_NOT_IMPLEMENTED"]], "fit_transform_excetption (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.FIT_TRANSFORM_EXCETPTION"]], "fit_transform_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.FIT_TRANSFORM_NOT_IMPLEMENTED"]], "init_arch_exception (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.INIT_ARCH_EXCEPTION"]], "init_arch_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.INIT_ARCH_NOT_IMPLEMENTED"]], "init_preprocess_exception (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.INIT_PREPROCESS_EXCEPTION"]], "init_preprocess_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.INIT_PREPROCESS_NOT_IMPLEMENTED"]], "invalid_input (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.INVALID_INPUT"]], "predict_exception (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.PREDICT_EXCEPTION"]], "predict_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.PREDICT_NOT_IMPLEMENTED"]], "transform_exception (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.TRANSFORM_EXCEPTION"]], "transform_not_implemented (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.TRANSFORM_NOT_IMPLEMENTED"]], "wrong_arch (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.WRONG_ARCH"]], "wrong_preprocess (moncon.errors.errors attribute)": [[2, "moncon.errors.Errors.WRONG_PREPROCESS"]], "get_dataplot_dict() (in module moncon.plots)": [[2, "moncon.plots.get_dataplot_dict"]], "module": [[2, "module-moncon"], [2, "module-moncon.errors"], [2, "module-moncon.plots"], [3, "module-moncon.ml"], [3, "module-moncon.ml.base_arch"], [3, "module-moncon.ml.keras_wrapper"], [4, "module-moncon.ml.supervised"], [4, "module-moncon.ml.supervised.mlp"], [4, "module-moncon.ml.supervised.models"], [5, "module-moncon.ml.unsupervised"], [5, "module-moncon.ml.unsupervised.anomaly_detection"], [5, "module-moncon.ml.unsupervised.autoencoder"], [6, "module-moncon.pipelines"], [6, "module-moncon.pipelines.rawdata_process"], [6, "module-moncon.pipelines.train_test_funcs"], [7, "module-moncon.preprocessing"], [7, "module-moncon.preprocessing.base_preprocess"], [7, "module-moncon.preprocessing.filters"], [7, "module-moncon.preprocessing.methods"], [7, "module-moncon.preprocessing.parameter_reduction"], [7, "module-moncon.preprocessing.scaling"], [8, "module-moncon.preprocessing.nan"], [8, "module-moncon.preprocessing.nan.drop_nan"], [8, "module-moncon.preprocessing.nan.fill_nan"], [8, "module-moncon.preprocessing.nan.smooth_tools"], [9, "module-moncon.preprocessing.parameter_extraction"], [9, "module-moncon.preprocessing.parameter_extraction.combined_extraction"], [9, "module-moncon.preprocessing.parameter_extraction.fourier_transform"], [9, "module-moncon.preprocessing.parameter_extraction.temporary_domain"], [10, "module-moncon.tools"], [10, "module-moncon.tools.arch_ops"], [10, "module-moncon.tools.evaluation_ops"], [10, "module-moncon.tools.preprocessing_ops"], [10, "module-moncon.tools.training_ops"]], "moncon": [[2, "module-moncon"]], "moncon.errors": [[2, "module-moncon.errors"]], "moncon.plots": [[2, "module-moncon.plots"]], "plot_data() (in module moncon.plots)": [[2, "moncon.plots.plot_data"]], "plt_kpi_sensors() (in module moncon.plots)": [[2, "moncon.plots.plt_kpi_sensors"]], "autoencodermodel (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.AutoEncoderModel"]], "baseanomalymodel (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.BaseAnomalyModel"]], "basearch (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.BaseArch"]], "cnnblock (class in moncon.ml.keras_wrapper)": [[3, "moncon.ml.keras_wrapper.CnnBlock"]], "dlsupervisedmodel (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.DLSupervisedModel"]], "kpi_dist_0 (moncon.ml.base_arch.baseanomalymodel attribute)": [[3, "moncon.ml.base_arch.BaseAnomalyModel.KPI_DIST_0"]], "kerasnet (class in moncon.ml.keras_wrapper)": [[3, "moncon.ml.keras_wrapper.KerasNet"]], "reversecnnblock (class in moncon.ml.keras_wrapper)": [[3, "moncon.ml.keras_wrapper.ReverseCnnBlock"]], "sklearnanomalymodel (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel"]], "sklearnsupervisedmodel (class in moncon.ml.base_arch)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel"]], "aggregate() (moncon.ml.base_arch.basearch static method)": [[3, "moncon.ml.base_arch.BaseArch.aggregate"]], "apply_cols_mask() (moncon.ml.base_arch.basearch static method)": [[3, "moncon.ml.base_arch.BaseArch.apply_cols_mask"]], "call() (moncon.ml.keras_wrapper.cnnblock method)": [[3, "moncon.ml.keras_wrapper.CnnBlock.call"]], "call() (moncon.ml.keras_wrapper.reversecnnblock method)": [[3, "moncon.ml.keras_wrapper.ReverseCnnBlock.call"]], "clean_dataset() (moncon.ml.base_arch.basearch static method)": [[3, "moncon.ml.base_arch.BaseArch.clean_dataset"]], "fit() (moncon.ml.base_arch.autoencodermodel method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.fit"]], "fit() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.fit"]], "fit() (moncon.ml.base_arch.dlsupervisedmodel method)": [[3, "moncon.ml.base_arch.DLSupervisedModel.fit"]], "fit() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.fit"]], "fit() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.fit"]], "fit() (moncon.ml.keras_wrapper.kerasnet method)": [[3, "moncon.ml.keras_wrapper.KerasNet.fit"]], "init_arch() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.init_arch"]], "init_preprocess() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.init_preprocess"]], "keras_compile_options (moncon.ml.keras_wrapper.kerasnet attribute)": [[3, "moncon.ml.keras_wrapper.KerasNet.keras_compile_options"]], "keras_layer_map (moncon.ml.keras_wrapper.kerasnet attribute)": [[3, "moncon.ml.keras_wrapper.KerasNet.keras_layer_map"]], "load_model() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.load_model"]], "load_model() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.load_model"]], "mean_squared_error() (moncon.ml.base_arch.autoencodermodel static method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.mean_squared_error"]], "moncon.ml": [[3, "module-moncon.ml"]], "moncon.ml.base_arch": [[3, "module-moncon.ml.base_arch"]], "moncon.ml.keras_wrapper": [[3, "module-moncon.ml.keras_wrapper"]], "parse_dataset() (moncon.ml.base_arch.basearch static method)": [[3, "moncon.ml.base_arch.BaseArch.parse_dataset"]], "parse_fit_logging() (moncon.ml.base_arch.autoencodermodel method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.base_arch.dlsupervisedmodel method)": [[3, "moncon.ml.base_arch.DLSupervisedModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.parse_fit_logging"]], "parse_predict_logging() (moncon.ml.base_arch.autoencodermodel static method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.parse_predict_logging"]], "parse_predict_logging() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.parse_predict_logging"]], "parse_predict_logging() (moncon.ml.base_arch.dlsupervisedmodel static method)": [[3, "moncon.ml.base_arch.DLSupervisedModel.parse_predict_logging"]], "parse_predict_logging() (moncon.ml.base_arch.sklearnanomalymodel static method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.parse_predict_logging"]], "parse_predict_logging() (moncon.ml.base_arch.sklearnsupervisedmodel static method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.parse_predict_logging"]], "plot_validation() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.plot_validation"]], "predict() (moncon.ml.base_arch.autoencodermodel method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.predict"]], "predict() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.predict"]], "predict() (moncon.ml.base_arch.dlsupervisedmodel method)": [[3, "moncon.ml.base_arch.DLSupervisedModel.predict"]], "predict() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.predict"]], "predict() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.predict"]], "predict() (moncon.ml.keras_wrapper.kerasnet method)": [[3, "moncon.ml.keras_wrapper.KerasNet.predict"]], "predict_kpi() (moncon.ml.base_arch.autoencodermodel method)": [[3, "moncon.ml.base_arch.AutoEncoderModel.predict_kpi"]], "predict_kpi() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.predict_kpi"]], "preprocess_from_csv() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.preprocess_from_csv"]], "preprocess_from_dataset() (moncon.ml.base_arch.basearch method)": [[3, "moncon.ml.base_arch.BaseArch.preprocess_from_dataset"]], "random_search_opt() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.random_search_opt"]], "save_model() (moncon.ml.base_arch.sklearnanomalymodel method)": [[3, "moncon.ml.base_arch.SklearnAnomalyModel.save_model"]], "save_model() (moncon.ml.base_arch.sklearnsupervisedmodel method)": [[3, "moncon.ml.base_arch.SklearnSupervisedModel.save_model"]], "sequential_model_creator() (moncon.ml.keras_wrapper.kerasnet method)": [[3, "moncon.ml.keras_wrapper.KerasNet.sequential_model_creator"]], "split_windows() (moncon.ml.base_arch.basearch static method)": [[3, "moncon.ml.base_arch.BaseArch.split_windows"]], "cnn (class in moncon.ml.supervised.models)": [[4, "moncon.ml.supervised.models.CNN"]], "gradientboostingcls (class in moncon.ml.supervised.models)": [[4, "moncon.ml.supervised.models.GradientBoostingCls"]], "mlp (class in moncon.ml.supervised.mlp)": [[4, "moncon.ml.supervised.mlp.MLP"]], "mlp (class in moncon.ml.supervised.models)": [[4, "moncon.ml.supervised.models.MLP"]], "rnn (class in moncon.ml.supervised.models)": [[4, "moncon.ml.supervised.models.RNN"]], "randomforestcls (class in moncon.ml.supervised.models)": [[4, "moncon.ml.supervised.models.RandomForestCls"]], "fit() (moncon.ml.supervised.mlp.mlp method)": [[4, "moncon.ml.supervised.mlp.MLP.fit"]], "init_arch() (moncon.ml.supervised.mlp.mlp method)": [[4, "moncon.ml.supervised.mlp.MLP.init_arch"]], "init_arch() (moncon.ml.supervised.models.cnn method)": [[4, "moncon.ml.supervised.models.CNN.init_arch"]], "init_arch() (moncon.ml.supervised.models.gradientboostingcls method)": [[4, "moncon.ml.supervised.models.GradientBoostingCls.init_arch"]], "init_arch() (moncon.ml.supervised.models.mlp method)": [[4, "moncon.ml.supervised.models.MLP.init_arch"]], "init_arch() (moncon.ml.supervised.models.rnn method)": [[4, "moncon.ml.supervised.models.RNN.init_arch"]], "init_arch() (moncon.ml.supervised.models.randomforestcls method)": [[4, "moncon.ml.supervised.models.RandomForestCls.init_arch"]], "model_score() (moncon.ml.supervised.models.gradientboostingcls method)": [[4, "moncon.ml.supervised.models.GradientBoostingCls.model_score"]], "model_score() (moncon.ml.supervised.models.randomforestcls method)": [[4, "moncon.ml.supervised.models.RandomForestCls.model_score"]], "moncon.ml.supervised": [[4, "module-moncon.ml.supervised"]], "moncon.ml.supervised.mlp": [[4, "module-moncon.ml.supervised.mlp"]], "moncon.ml.supervised.models": [[4, "module-moncon.ml.supervised.models"]], "parse_fit_logging() (moncon.ml.supervised.mlp.mlp method)": [[4, "moncon.ml.supervised.mlp.MLP.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.supervised.models.cnn method)": [[4, "moncon.ml.supervised.models.CNN.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.supervised.models.gradientboostingcls method)": [[4, "moncon.ml.supervised.models.GradientBoostingCls.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.supervised.models.mlp method)": [[4, "moncon.ml.supervised.models.MLP.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.supervised.models.rnn method)": [[4, "moncon.ml.supervised.models.RNN.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.supervised.models.randomforestcls method)": [[4, "moncon.ml.supervised.models.RandomForestCls.parse_fit_logging"]], "parse_predict_logging() (moncon.ml.supervised.mlp.mlp static method)": [[4, "moncon.ml.supervised.mlp.MLP.parse_predict_logging"]], "predict() (moncon.ml.supervised.mlp.mlp method)": [[4, "moncon.ml.supervised.mlp.MLP.predict"]], "autocnn (class in moncon.ml.unsupervised.autoencoder)": [[5, "moncon.ml.unsupervised.autoencoder.AutoCNN"]], "automlp (class in moncon.ml.unsupervised.autoencoder)": [[5, "moncon.ml.unsupervised.autoencoder.AutoMLP"]], "autornn (class in moncon.ml.unsupervised.autoencoder)": [[5, "moncon.ml.unsupervised.autoencoder.AutoRNN"]], "ellipticenvelopeanomalymodel (class in moncon.ml.unsupervised.anomaly_detection)": [[5, "moncon.ml.unsupervised.anomaly_detection.EllipticEnvelopeAnomalyModel"]], "isolationforestanomalymodel (class in moncon.ml.unsupervised.anomaly_detection)": [[5, "moncon.ml.unsupervised.anomaly_detection.IsolationForestAnomalyModel"]], "localoutlierfactoranomalymodel (class in moncon.ml.unsupervised.anomaly_detection)": [[5, "moncon.ml.unsupervised.anomaly_detection.LocalOutlierFactorAnomalyModel"]], "oneclasssvmanomalymodel (class in moncon.ml.unsupervised.anomaly_detection)": [[5, "moncon.ml.unsupervised.anomaly_detection.OneClassSVMAnomalyModel"]], "init_arch() (moncon.ml.unsupervised.anomaly_detection.ellipticenvelopeanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.EllipticEnvelopeAnomalyModel.init_arch"]], "init_arch() (moncon.ml.unsupervised.anomaly_detection.isolationforestanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.IsolationForestAnomalyModel.init_arch"]], "init_arch() (moncon.ml.unsupervised.anomaly_detection.localoutlierfactoranomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.LocalOutlierFactorAnomalyModel.init_arch"]], "init_arch() (moncon.ml.unsupervised.anomaly_detection.oneclasssvmanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.OneClassSVMAnomalyModel.init_arch"]], "init_arch() (moncon.ml.unsupervised.autoencoder.autocnn method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoCNN.init_arch"]], "init_arch() (moncon.ml.unsupervised.autoencoder.automlp method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoMLP.init_arch"]], "init_arch() (moncon.ml.unsupervised.autoencoder.autornn method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoRNN.init_arch"]], "model_score() (moncon.ml.unsupervised.anomaly_detection.isolationforestanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.IsolationForestAnomalyModel.model_score"]], "model_score() (moncon.ml.unsupervised.anomaly_detection.localoutlierfactoranomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.LocalOutlierFactorAnomalyModel.model_score"]], "model_score() (moncon.ml.unsupervised.anomaly_detection.oneclasssvmanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.OneClassSVMAnomalyModel.model_score"]], "moncon.ml.unsupervised": [[5, "module-moncon.ml.unsupervised"]], "moncon.ml.unsupervised.anomaly_detection": [[5, "module-moncon.ml.unsupervised.anomaly_detection"]], "moncon.ml.unsupervised.autoencoder": [[5, "module-moncon.ml.unsupervised.autoencoder"]], "parse_fit_logging() (moncon.ml.unsupervised.anomaly_detection.ellipticenvelopeanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.EllipticEnvelopeAnomalyModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.anomaly_detection.isolationforestanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.IsolationForestAnomalyModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.anomaly_detection.localoutlierfactoranomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.LocalOutlierFactorAnomalyModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.anomaly_detection.oneclasssvmanomalymodel method)": [[5, "moncon.ml.unsupervised.anomaly_detection.OneClassSVMAnomalyModel.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.autoencoder.autocnn method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoCNN.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.autoencoder.automlp method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoMLP.parse_fit_logging"]], "parse_fit_logging() (moncon.ml.unsupervised.autoencoder.autornn method)": [[5, "moncon.ml.unsupervised.autoencoder.AutoRNN.parse_fit_logging"]], "clean_data() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.clean_data"]], "drop_empty_cols() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.drop_empty_cols"]], "file_name() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.file_name"]], "get_tags() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.get_tags"]], "make_save_path() (in module moncon.pipelines.train_test_funcs)": [[6, "moncon.pipelines.train_test_funcs.make_save_path"]], "make_sensors_comb_code() (in module moncon.pipelines.train_test_funcs)": [[6, "moncon.pipelines.train_test_funcs.make_sensors_comb_code"]], "moncon.pipelines": [[6, "module-moncon.pipelines"]], "moncon.pipelines.rawdata_process": [[6, "module-moncon.pipelines.rawdata_process"]], "moncon.pipelines.train_test_funcs": [[6, "module-moncon.pipelines.train_test_funcs"]], "save_data() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.save_data"]], "set_sensor_names() (in module moncon.pipelines.rawdata_process)": [[6, "moncon.pipelines.rawdata_process.set_sensor_names"]], "train_test_pipeline() (in module moncon.pipelines.train_test_funcs)": [[6, "moncon.pipelines.train_test_funcs.train_test_pipeline"]], "autokernelpca (class in moncon.preprocessing.parameter_reduction)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA"]], "autopca (class in moncon.preprocessing.parameter_reduction)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA"]], "basepreprocess (class in moncon.preprocessing.base_preprocess)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess"]], "correlation (class in moncon.preprocessing.methods)": [[7, "moncon.preprocessing.methods.Correlation"]], "deleteinterpolated (class in moncon.preprocessing.filters)": [[7, "moncon.preprocessing.filters.DeleteInterpolated"]], "deletetransient (class in moncon.preprocessing.filters)": [[7, "moncon.preprocessing.filters.DeleteTransient"]], "heatmap (class in moncon.preprocessing.methods)": [[7, "moncon.preprocessing.methods.HeatMap"]], "minmaxscaling (class in moncon.preprocessing.scaling)": [[7, "moncon.preprocessing.scaling.MinMaxScaling"]], "movingaverage (class in moncon.preprocessing.methods)": [[7, "moncon.preprocessing.methods.MovingAverage"]], "outlierremoval (class in moncon.preprocessing.filters)": [[7, "moncon.preprocessing.filters.OutlierRemoval"]], "standardscaling (class in moncon.preprocessing.scaling)": [[7, "moncon.preprocessing.scaling.StandardScaling"]], "stopfiltermov (class in moncon.preprocessing.methods)": [[7, "moncon.preprocessing.methods.StopFilterMov"]], "analyze() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.analyze"]], "analyze() (moncon.preprocessing.filters.outlierremoval method)": [[7, "moncon.preprocessing.filters.OutlierRemoval.analyze"]], "analyze() (moncon.preprocessing.methods.correlation method)": [[7, "moncon.preprocessing.methods.Correlation.analyze"]], "analyze() (moncon.preprocessing.methods.heatmap method)": [[7, "moncon.preprocessing.methods.HeatMap.analyze"]], "analyze() (moncon.preprocessing.parameter_reduction.autokernelpca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA.analyze"]], "analyze() (moncon.preprocessing.parameter_reduction.autopca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA.analyze"]], "analyze() (moncon.preprocessing.scaling.minmaxscaling method)": [[7, "moncon.preprocessing.scaling.MinMaxScaling.analyze"]], "analyze() (moncon.preprocessing.scaling.standardscaling method)": [[7, "moncon.preprocessing.scaling.StandardScaling.analyze"]], "apply_cols_mask() (moncon.preprocessing.base_preprocess.basepreprocess static method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.apply_cols_mask"]], "columns_to_drop() (moncon.preprocessing.base_preprocess.basepreprocess static method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.columns_to_drop"]], "fit() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.fit"]], "fit() (moncon.preprocessing.filters.deleteinterpolated method)": [[7, "moncon.preprocessing.filters.DeleteInterpolated.fit"]], "fit() (moncon.preprocessing.filters.deletetransient method)": [[7, "moncon.preprocessing.filters.DeleteTransient.fit"]], "fit() (moncon.preprocessing.filters.outlierremoval method)": [[7, "moncon.preprocessing.filters.OutlierRemoval.fit"]], "fit() (moncon.preprocessing.methods.correlation method)": [[7, "moncon.preprocessing.methods.Correlation.fit"]], "fit() (moncon.preprocessing.methods.heatmap method)": [[7, "moncon.preprocessing.methods.HeatMap.fit"]], "fit() (moncon.preprocessing.methods.movingaverage method)": [[7, "moncon.preprocessing.methods.MovingAverage.fit"]], "fit() (moncon.preprocessing.methods.stopfiltermov method)": [[7, "moncon.preprocessing.methods.StopFilterMov.fit"]], "fit() (moncon.preprocessing.parameter_reduction.autokernelpca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA.fit"]], "fit() (moncon.preprocessing.parameter_reduction.autopca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA.fit"]], "fit() (moncon.preprocessing.scaling.minmaxscaling method)": [[7, "moncon.preprocessing.scaling.MinMaxScaling.fit"]], "fit() (moncon.preprocessing.scaling.standardscaling method)": [[7, "moncon.preprocessing.scaling.StandardScaling.fit"]], "fit_transform() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.fit_transform"]], "fit_transform() (moncon.preprocessing.filters.deleteinterpolated method)": [[7, "moncon.preprocessing.filters.DeleteInterpolated.fit_transform"]], "fit_transform() (moncon.preprocessing.filters.deletetransient method)": [[7, "moncon.preprocessing.filters.DeleteTransient.fit_transform"]], "fit_transform() (moncon.preprocessing.filters.outlierremoval method)": [[7, "moncon.preprocessing.filters.OutlierRemoval.fit_transform"]], "fit_transform() (moncon.preprocessing.methods.correlation method)": [[7, "moncon.preprocessing.methods.Correlation.fit_transform"]], "fit_transform() (moncon.preprocessing.methods.heatmap method)": [[7, "moncon.preprocessing.methods.HeatMap.fit_transform"]], "fit_transform() (moncon.preprocessing.methods.movingaverage method)": [[7, "moncon.preprocessing.methods.MovingAverage.fit_transform"]], "fit_transform() (moncon.preprocessing.methods.stopfiltermov method)": [[7, "moncon.preprocessing.methods.StopFilterMov.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_reduction.autokernelpca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_reduction.autopca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA.fit_transform"]], "fit_transform() (moncon.preprocessing.scaling.minmaxscaling method)": [[7, "moncon.preprocessing.scaling.MinMaxScaling.fit_transform"]], "fit_transform() (moncon.preprocessing.scaling.standardscaling method)": [[7, "moncon.preprocessing.scaling.StandardScaling.fit_transform"]], "merge_x_transform() (moncon.preprocessing.base_preprocess.basepreprocess static method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.merge_X_transform"]], "merge_y_transform() (moncon.preprocessing.base_preprocess.basepreprocess static method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.merge_y_transform"]], "moncon.preprocessing": [[7, "module-moncon.preprocessing"]], "moncon.preprocessing.base_preprocess": [[7, "module-moncon.preprocessing.base_preprocess"]], "moncon.preprocessing.filters": [[7, "module-moncon.preprocessing.filters"]], "moncon.preprocessing.methods": [[7, "module-moncon.preprocessing.methods"]], "moncon.preprocessing.parameter_reduction": [[7, "module-moncon.preprocessing.parameter_reduction"]], "moncon.preprocessing.scaling": [[7, "module-moncon.preprocessing.scaling"]], "output_procesable() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.output_procesable"]], "output_procesable() (moncon.preprocessing.parameter_reduction.autokernelpca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA.output_procesable"]], "output_procesable() (moncon.preprocessing.parameter_reduction.autopca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA.output_procesable"]], "set_n_components() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.set_n_components"]], "transform() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.transform"]], "transform() (moncon.preprocessing.filters.deleteinterpolated method)": [[7, "moncon.preprocessing.filters.DeleteInterpolated.transform"]], "transform() (moncon.preprocessing.filters.deletetransient method)": [[7, "moncon.preprocessing.filters.DeleteTransient.transform"]], "transform() (moncon.preprocessing.filters.outlierremoval method)": [[7, "moncon.preprocessing.filters.OutlierRemoval.transform"]], "transform() (moncon.preprocessing.methods.correlation method)": [[7, "moncon.preprocessing.methods.Correlation.transform"]], "transform() (moncon.preprocessing.methods.heatmap method)": [[7, "moncon.preprocessing.methods.HeatMap.transform"]], "transform() (moncon.preprocessing.methods.movingaverage method)": [[7, "moncon.preprocessing.methods.MovingAverage.transform"]], "transform() (moncon.preprocessing.methods.stopfiltermov method)": [[7, "moncon.preprocessing.methods.StopFilterMov.transform"]], "transform() (moncon.preprocessing.parameter_reduction.autokernelpca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoKernelPCA.transform"]], "transform() (moncon.preprocessing.parameter_reduction.autopca method)": [[7, "moncon.preprocessing.parameter_reduction.AutoPCA.transform"]], "transform() (moncon.preprocessing.scaling.minmaxscaling method)": [[7, "moncon.preprocessing.scaling.MinMaxScaling.transform"]], "transform() (moncon.preprocessing.scaling.standardscaling method)": [[7, "moncon.preprocessing.scaling.StandardScaling.transform"]], "transform_xy() (moncon.preprocessing.base_preprocess.basepreprocess method)": [[7, "moncon.preprocessing.base_preprocess.BasePreprocess.transform_xy"]], "dropnan (class in moncon.preprocessing.nan.drop_nan)": [[8, "moncon.preprocessing.nan.drop_nan.DropNan"]], "fillnan (class in moncon.preprocessing.nan.fill_nan)": [[8, "moncon.preprocessing.nan.fill_nan.FillNan"]], "initialguess() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.InitialGuess"]], "robustweights() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.RobustWeights"]], "analyze() (moncon.preprocessing.nan.drop_nan.dropnan method)": [[8, "moncon.preprocessing.nan.drop_nan.DropNan.analyze"]], "analyze() (moncon.preprocessing.nan.fill_nan.fillnan method)": [[8, "moncon.preprocessing.nan.fill_nan.FillNan.analyze"]], "beta() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.beta"]], "binomial() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.binomial"]], "chisquare() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.chisquare"]], "choice() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.choice"]], "dctnd() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.dctND"]], "df2matrix() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.df2matrix"]], "dirichlet() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.dirichlet"]], "exponential() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.exponential"]], "f() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.f"]], "fit() (moncon.preprocessing.nan.drop_nan.dropnan method)": [[8, "moncon.preprocessing.nan.drop_nan.DropNan.fit"]], "fit() (moncon.preprocessing.nan.fill_nan.fillnan method)": [[8, "moncon.preprocessing.nan.fill_nan.FillNan.fit"]], "fit_transform() (moncon.preprocessing.nan.drop_nan.dropnan method)": [[8, "moncon.preprocessing.nan.drop_nan.DropNan.fit_transform"]], "fit_transform() (moncon.preprocessing.nan.fill_nan.fillnan method)": [[8, "moncon.preprocessing.nan.fill_nan.FillNan.fit_transform"]], "gamma() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.gamma"]], "gcv() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.gcv"]], "geometric() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.geometric"]], "get_state() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.get_state"]], "gumbel() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.gumbel"]], "hypergeometric() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.hypergeometric"]], "laplace() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.laplace"]], "logistic() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.logistic"]], "lognormal() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.lognormal"]], "logseries() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.logseries"]], "moncon.preprocessing.nan": [[8, "module-moncon.preprocessing.nan"]], "moncon.preprocessing.nan.drop_nan": [[8, "module-moncon.preprocessing.nan.drop_nan"]], "moncon.preprocessing.nan.fill_nan": [[8, "module-moncon.preprocessing.nan.fill_nan"]], "moncon.preprocessing.nan.smooth_tools": [[8, "module-moncon.preprocessing.nan.smooth_tools"]], "multinomial() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.multinomial"]], "multivariate_normal() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.multivariate_normal"]], "negative_binomial() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.negative_binomial"]], "noncentral_chisquare() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.noncentral_chisquare"]], "noncentral_f() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.noncentral_f"]], "normal() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.normal"]], "pareto() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.pareto"]], "peaks() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.peaks"]], "permutation() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.permutation"]], "poisson() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.poisson"]], "rand() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.rand"]], "randint() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.randint"]], "randn() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.randn"]], "random_integers() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.random_integers"]], "random_sample() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.random_sample"]], "rayleigh() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.rayleigh"]], "seed() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.seed"]], "set_state() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.set_state"]], "shuffle() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.shuffle"]], "smooth_df() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.smooth_df"]], "smoothn() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.smoothn"]], "standard_cauchy() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.standard_cauchy"]], "standard_exponential() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.standard_exponential"]], "standard_gamma() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.standard_gamma"]], "standard_normal() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.standard_normal"]], "standard_t() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.standard_t"]], "transform() (moncon.preprocessing.nan.drop_nan.dropnan method)": [[8, "moncon.preprocessing.nan.drop_nan.DropNan.transform"]], "transform() (moncon.preprocessing.nan.fill_nan.fillnan method)": [[8, "moncon.preprocessing.nan.fill_nan.FillNan.transform"]], "triangular() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.triangular"]], "uniform() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.uniform"]], "vonmises() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.vonmises"]], "wald() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.wald"]], "warning() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.warning"]], "weibull() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.weibull"]], "zipf() (in module moncon.preprocessing.nan.smooth_tools)": [[8, "moncon.preprocessing.nan.smooth_tools.zipf"]], "bandfourier (class in moncon.preprocessing.parameter_extraction.fourier_transform)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier"]], "combinedextraction (class in moncon.preprocessing.parameter_extraction.combined_extraction)": [[9, "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction"]], "fourierbands (class in moncon.preprocessing.parameter_extraction.fourier_transform)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands"]], "hilbertenvelope (class in moncon.preprocessing.parameter_extraction.fourier_transform)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope"]], "simplefourier (class in moncon.preprocessing.parameter_extraction.fourier_transform)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier"]], "temporarydomain (class in moncon.preprocessing.parameter_extraction.temporary_domain)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain"]], "analyze() (moncon.preprocessing.parameter_extraction.combined_extraction.combinedextraction method)": [[9, "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction.analyze"]], "analyze() (moncon.preprocessing.parameter_extraction.fourier_transform.bandfourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier.analyze"]], "analyze() (moncon.preprocessing.parameter_extraction.fourier_transform.fourierbands method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands.analyze"]], "analyze() (moncon.preprocessing.parameter_extraction.fourier_transform.hilbertenvelope method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope.analyze"]], "analyze() (moncon.preprocessing.parameter_extraction.fourier_transform.simplefourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier.analyze"]], "analyze() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.analyze"]], "features() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.features"]], "fit() (moncon.preprocessing.parameter_extraction.combined_extraction.combinedextraction method)": [[9, "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction.fit"]], "fit() (moncon.preprocessing.parameter_extraction.fourier_transform.bandfourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier.fit"]], "fit() (moncon.preprocessing.parameter_extraction.fourier_transform.fourierbands method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands.fit"]], "fit() (moncon.preprocessing.parameter_extraction.fourier_transform.hilbertenvelope method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope.fit"]], "fit() (moncon.preprocessing.parameter_extraction.fourier_transform.simplefourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier.fit"]], "fit() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.fit"]], "fit_transform() (moncon.preprocessing.parameter_extraction.combined_extraction.combinedextraction method)": [[9, "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_extraction.fourier_transform.bandfourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_extraction.fourier_transform.fourierbands method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_extraction.fourier_transform.hilbertenvelope method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_extraction.fourier_transform.simplefourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier.fit_transform"]], "fit_transform() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.fit_transform"]], "get_box_plot_data() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain static method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.get_box_plot_data"]], "moncon.preprocessing.parameter_extraction": [[9, "module-moncon.preprocessing.parameter_extraction"]], "moncon.preprocessing.parameter_extraction.combined_extraction": [[9, "module-moncon.preprocessing.parameter_extraction.combined_extraction"]], "moncon.preprocessing.parameter_extraction.fourier_transform": [[9, "module-moncon.preprocessing.parameter_extraction.fourier_transform"]], "moncon.preprocessing.parameter_extraction.temporary_domain": [[9, "module-moncon.preprocessing.parameter_extraction.temporary_domain"]], "output_procesable() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.output_procesable"]], "time_features() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.time_features"]], "transform() (moncon.preprocessing.parameter_extraction.combined_extraction.combinedextraction method)": [[9, "moncon.preprocessing.parameter_extraction.combined_extraction.CombinedExtraction.transform"]], "transform() (moncon.preprocessing.parameter_extraction.fourier_transform.bandfourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.BandFourier.transform"]], "transform() (moncon.preprocessing.parameter_extraction.fourier_transform.fourierbands method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.Fourierbands.transform"]], "transform() (moncon.preprocessing.parameter_extraction.fourier_transform.hilbertenvelope method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.HilbertEnvelope.transform"]], "transform() (moncon.preprocessing.parameter_extraction.fourier_transform.simplefourier method)": [[9, "moncon.preprocessing.parameter_extraction.fourier_transform.SimpleFourier.transform"]], "transform() (moncon.preprocessing.parameter_extraction.temporary_domain.temporarydomain method)": [[9, "moncon.preprocessing.parameter_extraction.temporary_domain.TemporaryDomain.transform"]], "analyze() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.analyze"]], "analyze_tsreport() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.analyze_tsreport"]], "arch_class() (in module moncon.tools.arch_ops)": [[10, "moncon.tools.arch_ops.arch_class"]], "evaluate_report_from_csv() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.evaluate_report_from_csv"]], "fit_transform() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.fit_transform"]], "get_checkpoint_filepath() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.get_checkpoint_filepath"]], "get_end_message() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_end_message"]], "get_end_message() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.get_end_message"]], "get_end_message_thread() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_end_message_thread"]], "get_eval_id() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_eval_id"]], "get_exp_id() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.get_exp_id"]], "get_log_filepath() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_log_filepath"]], "get_log_filepath() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.get_log_filepath"]], "get_prerprocess_path() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.get_prerprocess_path"]], "get_start_message() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_start_message"]], "get_start_message() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.get_start_message"]], "get_start_message_thread() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.get_start_message_thread"]], "init_arch_class() (in module moncon.tools.arch_ops)": [[10, "moncon.tools.arch_ops.init_arch_class"]], "init_preprocess() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.init_preprocess"]], "initialize_online_report_evaluation() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.initialize_online_report_evaluation"]], "moncon.tools": [[10, "module-moncon.tools"]], "moncon.tools.arch_ops": [[10, "module-moncon.tools.arch_ops"]], "moncon.tools.evaluation_ops": [[10, "module-moncon.tools.evaluation_ops"]], "moncon.tools.preprocessing_ops": [[10, "module-moncon.tools.preprocessing_ops"]], "moncon.tools.training_ops": [[10, "module-moncon.tools.training_ops"]], "parse_logging_file() (in module moncon.tools.evaluation_ops)": [[10, "moncon.tools.evaluation_ops.parse_logging_file"]], "parse_logging_file() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.parse_logging_file"]], "test_transform() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.test_transform"]], "train_model() (in module moncon.tools.training_ops)": [[10, "moncon.tools.training_ops.train_model"]], "valid_transform() (in module moncon.tools.preprocessing_ops)": [[10, "moncon.tools.preprocessing_ops.valid_transform"]]}})